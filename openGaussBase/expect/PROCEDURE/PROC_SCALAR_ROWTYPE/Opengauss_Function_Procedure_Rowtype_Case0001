-- @testpoint: 标量类型%rowtype的测试———基本类型测试
--标量类型%type的测试———基本类型测试
drop table if exists FVT_PROC_SCALAR_ROWTYPE_table_001;
SQL SUCCESS
CREATE TABLE FVT_PROC_SCALAR_ROWTYPE_table_001(
  T1 INT,
  T2 INTEGER NOT NULL,
  T3 BIGINT,
  T4 NUMBER DEFAULT 0.2332,
  T5 NUMBER(12,2),
  T6 NUMBER(12,6),
  T7 BINARY_DOUBLE,
  T8 DECIMAL,
  T9 DECIMAL(8,2),
  T10 DECIMAL(8,4),
  T11 REAL,
  T12 CHAR(4000),
  T13 CHAR(100),
  T14 VARCHAR(4000),
  T15 VARCHAR(100),
  T16 VARCHAR2(4000),
  T17 NUMERIC,

  T19 DATE,
  T20 TIMESTAMP,
  T21 TIMESTAMP(6),
  T22 BOOL
) ;
SQL SUCCESS
create unique index  FVT_PROC_SCALAR_ROWTYPE_table_index_001 on FVT_PROC_SCALAR_ROWTYPE_table_001(T1);
SQL SUCCESS
create index FVT_PROC_SCALAR_ROWTYPE_table_index1_001 on FVT_PROC_SCALAR_ROWTYPE_table_001(T2,T17,T20);
SQL SUCCESS
SQL SUCCESS
SQL SUCCESS
SQL SUCCESS
SQL SUCCESS
SQL SUCCESS
--创建存储过程
CREATE OR REPLACE PROCEDURE FVT_PROC_SCALAR_ROWTYPE_001()  AS
V1 FVT_PROC_SCALAR_ROWTYPE_table_001%rowtype;
BEGIN
select * into V1 from FVT_PROC_SCALAR_ROWTYPE_table_001 where T1=13;
raise info 'T3=:%',V1.T3;
raise info 'T7=:%',V1.T7;
raise info 'T16=:%',V1.T16;
EXCEPTION
WHEN NO_DATA_FOUND THEN raise info 'NO_DATA_FOUND';
END;
/
SQL SUCCESS
--调用存储过程
CALL FVT_PROC_SCALAR_ROWTYPE_001();
+-----------------------------+
| fvt_proc_scalar_rowtype_001 |
+-----------------------------+
|                             |
+-----------------------------+
--恢复环境
drop table if exists FVT_PROC_SCALAR_ROWTYPE_table_001;
SQL SUCCESS
drop procedure if exists FVT_PROC_SCALAR_ROWTYPE_001;
SQL SUCCESS
