-- @testpoint: 存储过程之间互相调用
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0000(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0000(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0000(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0001(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0000(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0000(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0002(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0001(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0001(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0003(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0002(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0002(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0004(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0003(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0003(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0005(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0004(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0004(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0006(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0005(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0005(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0007(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0006(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0006(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0008(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0007(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0007(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0009(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0008(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0008(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0010(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0009(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0009(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0011(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0010(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0010(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0012(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0011(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0011(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
CREATE OR REPLACE PROCEDURE P_RECURSIVE_CALL_OTHER_0013(V_NUM IN OUT INT) IS
  V_NUM_1 INT;
  V_NUM_2 INT;
BEGIN
  V_NUM_1 := V_NUM - 1;
  V_NUM_2 := V_NUM - 2;
  IF V_NUM < 3 THEN
     V_NUM := 1;
  ELSE
  P_RECURSIVE_CALL_OTHER_0012(V_NUM_1);
  P_RECURSIVE_CALL_OTHER_0012(V_NUM_2);
  V_NUM := V_NUM_1 + V_NUM_2;
  END IF;
END;
/
SQL SUCCESS
drop procedure p_recursive_call_other_0000;
SQL SUCCESS
drop procedure p_recursive_call_other_0001;
SQL SUCCESS
drop procedure p_recursive_call_other_0002;
SQL SUCCESS
drop procedure p_recursive_call_other_0003;
SQL SUCCESS
drop procedure p_recursive_call_other_0004;
SQL SUCCESS
drop procedure p_recursive_call_other_0005;
SQL SUCCESS
drop procedure p_recursive_call_other_0006;
SQL SUCCESS
drop procedure p_recursive_call_other_0007;
SQL SUCCESS
drop procedure p_recursive_call_other_0008;
SQL SUCCESS
drop procedure p_recursive_call_other_0009;
SQL SUCCESS
drop procedure p_recursive_call_other_0010;
SQL SUCCESS
drop procedure p_recursive_call_other_0011;
SQL SUCCESS
drop procedure p_recursive_call_other_0012;
SQL SUCCESS
drop procedure p_recursive_call_other_0013;
SQL SUCCESS
