-- @testpoint: 时间函数timestampadd(入参为datetime格式)功能测试,部分测试步骤合理报错
--step1:创建用于存储函数结果的表;expect:成功
drop table if exists func_test;
SQL SUCCESS
create table func_test(functionName varchar(256),result varchar(256));
SQL SUCCESS
--step2:插入timestampadd正常执行结果;expect:成功
insert into func_test(functionName, result) values('TIMESTAMPADD(YEAR,1,''2022-07-27 08:30:00'')', TIMESTAMPADD(YEAR,1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(YEAR,-1,''2022-07-27 08:30:00'')', TIMESTAMPADD(YEAR,-1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(MONTH,1,''2022-07-27 08:30:00'')', TIMESTAMPADD(MONTH,1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(MONTH,-1,''2022-07-27 08:30:00'')', TIMESTAMPADD(MONTH,-1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(WEEK,1,''2022-07-27 08:30:00'')', TIMESTAMPADD(WEEK,1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(WEEK,-1,''2022-07-27 08:30:00'')', TIMESTAMPADD(WEEK,-1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(DAY,1,''2022-07-27 08:30:00'')', TIMESTAMPADD(DAY,1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(DAY,-1,''2022-07-27 08:30:00'')', TIMESTAMPADD(DAY,-1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,1,''2022-07-27 08:30:00'')', TIMESTAMPADD(HOUR,1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,-1,''2022-07-27 08:30:00'')', TIMESTAMPADD(HOUR,-1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(MINUTE,1,''2022-07-27 08:30:00'')', TIMESTAMPADD(MINUTE,1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(MINUTE,-1,''2022-07-27 08:30:00'')', TIMESTAMPADD(MINUTE,-1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,1,''2022-07-27 08:30:00'')', TIMESTAMPADD(SECOND,1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,-1,''2022-07-27 08:30:00'')', TIMESTAMPADD(SECOND,-1,'2022-07-27 08:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(DAY,1,''2022-07-27 -01:30:00'')', TIMESTAMPADD(DAY,1,'2022-07-27 -01:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,1,''2022-07-27 -12:30:00'')', TIMESTAMPADD(HOUR,1,'2022-07-27 -12:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,-1,''2022-07-27 08:30:-01'')', TIMESTAMPADD(SECOND,-1,'2022-07-27 08:30:-01'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,-1, 20220727083000)', TIMESTAMPADD(SECOND,-1, 20220727083000));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,-1, 20220727083000.000001)', TIMESTAMPADD(SECOND,-1, 20220727083000.000001));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(MINUTE,-1,''2022-07-27 08:-59:00'')', TIMESTAMPADD(MINUTE,-1,'2022-07-27 08:-59:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(YEAR,-1,''2022-07-27 -01:-30:00'')', TIMESTAMPADD(YEAR,-1,'2022-07-27 -01:-30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,1,''2022-07-27 23:30:00'')', TIMESTAMPADD(HOUR,1,'2022-07-27 23:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,-1,''2022-07-27 00:30:00'')', TIMESTAMPADD(HOUR,-1,'2022-07-27 00:30:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(MINUTE,1,''2022-07-27 08:59:59'')', TIMESTAMPADD(MINUTE,1,'2022-07-27 08:59:59'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(MINUTE,-1,''2022-07-27 08:00:00'')', TIMESTAMPADD(MINUTE,-1,'2022-07-27 08:00:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,1,''2022-07-27 08:30:59'')', TIMESTAMPADD(SECOND,1,'2022-07-27 08:30:59'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,-1,''2022-07-27 00:00:00'')', TIMESTAMPADD(SECOND,-1,'2022-07-27 00:00:00'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,0.001,''2022-07-27 08:30:59.999'')', TIMESTAMPADD(SECOND,0.001,'2022-07-27 08:30:59.999'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,-0.001,''2022-07-27 00:00:00'')', TIMESTAMPADD(SECOND,-0.001,'2022-07-27 00:00:00'));
SQL SUCCESS
--step3:插入timestampadd涉及时间类型值超出范围的用例执行结果;expect:合理报错
insert into func_test(functionName, result) values('TIMESTAMPADD(DAY,1,''9999-12-31 23:59:59'')', TIMESTAMPADD(DAY,1,'9999-12-31 23:59:59'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('TIMESTAMPADD(DAY,-1,''0001-01-01 00:00:00'')', TIMESTAMPADD(DAY,-1,'0001-01-01 00:00:00'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
--step4:插入入参为特殊类型的timestampadd用例执行结果;expect:成功
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,true,''2022-04-05'')', TIMESTAMPADD(HOUR,true,'2022-04-05'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,B''11'',''2022-04-05'')', TIMESTAMPADD(HOUR,B'11','2022-04-05'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,1,date''2022-04-05'')', TIMESTAMPADD(HOUR,1,date'2022-04-05'));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(DAY,1,cast(''2022-04-05'' as datetime))', TIMESTAMPADD(day,1,cast('2022-04-05' as datetime)));
SQL SUCCESS
insert into func_test(functionName, result) values('TIMESTAMPADD(DAY,1,time''14:30:00'')', TIMESTAMPADD(day,1,time'14:30:00'));
SQL SUCCESS
--step5:插入非法入参时timestampadd执行结果;expect:合理报错
insert into func_test(functionName, result) values('TIMESTAMPADD(YEAR,1,''2022-07-27 24:30:00'')', TIMESTAMPADD(YEAR,1,'2022-07-27 24:30:00'));
?.*ERROR: date/time field value out of range: "2022-07-27 24:30:00"
  Where: referenced column: result
insert into func_test(functionName, result) values('TIMESTAMPADD(MONTH,1,''2022-07-27 26:61:60'')', TIMESTAMPADD(MONTH,1,'2022-07-27 26:61:60'));
?.*ERROR: date/time field value out of range: "2022-07-27 26:61:60"
  Where: referenced column: result
insert into func_test(functionName, result) values('TIMESTAMPADD(MONTH,-1,''2022-07-27 08:60:60'')', TIMESTAMPADD(MONTH,-1,'2022-07-27 08:60:60'));
?.*ERROR: date/time field value out of range: "2022-07-27 08:60:60"
  Where: referenced column: result
insert into func_test(functionName, result) values('TIMESTAMPADD(DAY,-1,''2022-07-27 25:30:00'')', TIMESTAMPADD(DAY,-1,'2022-07-27 25:30:00'));
?.*ERROR: date/time field value out of range: "2022-07-27 25:30:00"
  Where: referenced column: result
insert into func_test(functionName, result) values('TIMESTAMPADD(HOUR,-1,''2022-07-27 25:30:00'')', TIMESTAMPADD(HOUR,-1,'2022-07-27 25:30:00'));
?.*ERROR: date/time field value out of range: "2022-07-27 25:30:00"
  Where: referenced column: result
insert into func_test(functionName, result) values('TIMESTAMPADD(MINUTE,1,''2022-07-27 08:61:00'')', TIMESTAMPADD(MINUTE,1,'2022-07-27 08:61:00'));
?.*ERROR: date/time field value out of range: "2022-07-27 08:61:00"
  Where: referenced column: result
insert into func_test(functionName, result) values('TIMESTAMPADD(SECOND,1,''2022-07-27 08:30:60'')', TIMESTAMPADD(SECOND,1,'2022-07-27 08:30:60'));
?.*ERROR: date/time field value out of range: "2022-07-27 08:30:60"
  Where: referenced column: result
--step6: og时间类型与格式测试;expect:部分类型合理报错
insert into func_test(functionName, result) values('timestampadd(day, 1, timetz''1:1:0+05'')', timestampadd(day, 1, timetz'1:1:0+05'));
?.*ERROR: invalid input syntax for type timestamp: "01:01:00\+05"
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, 1, timestamptz''2000-1-1 1:1:1+05'')', timestampadd(day, 1, timestamptz'2000-1-1 1:1:1+05'));
SQL SUCCESS
insert into func_test(functionName, result) values('timestampadd(day, 1, reltime''2000 years 1 mons 1 days 1:1:1'')', timestampadd(day, 1, reltime'2000 years 1 mons 1 days 1:1:1'));
?.*ERROR: time zone displacement out of range: "-41 years -4 mons -27 days -18:02:59"
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, 1, abstime''2000-1-1 1:1:1+05'')', timestampadd(day, 1, abstime'2000-1-1 1:1:1+05'));
SQL SUCCESS
insert into func_test(functionName, result) values('timestampadd(day, 1, ''23:1:1+05'')', timestampadd(day, 1, '23:1:1+05'));
SQL SUCCESS
insert into func_test(functionName, result) values('timestampadd(day, 1, ''2000 years 1 mons 1 days 1:1:1'')', timestampadd(day, 1, '2000 years 1 mons 1 days 1:1:1'));
?.*ERROR: invalid input syntax for type timestamp: "2000 years 1 mons 1 days 1:1:1"
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, 1, ''2000-1-1 23:1:1+05'')', timestampadd(day, 1, '2000-1-1 23:1:1+05'));
SQL SUCCESS
--step7: og时间边界测试;expect:合理报错
insert into func_test(functionName, result) values('timestampadd(day, 1, date''4714-11-24bc'')', timestampadd(day, 1, date'4714-11-24bc'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, 1, date''5874897-12-31'')', timestampadd(day, 1, date'5874897-12-31'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, 1, datetime''4714-11-24 00:00:00 bc'')', timestampadd(day, 1, datetime'4714-11-24 00:00:00 bc'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, 1, datetime''294277-1-9 4:00:54.775807'')', timestampadd(day, 1, datetime'294277-1-9 4:00:54.775807'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, 1, datetime''294277-1-9 4:00:54.775806'')', timestampadd(day, 1, datetime'294277-1-9 4:00:54.775806'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, -1, date''4714-11-24bc'')', timestampadd(day, -1, date'4714-11-24bc'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, -1, date''5874897-12-31'')', timestampadd(day, -1, date'5874897-12-31'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, -1, datetime''4714-11-24 00:00:00 bc'')', timestampadd(day, -1, datetime'4714-11-24 00:00:00 bc'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, -1, datetime''294277-1-9 4:00:54.775807'')', timestampadd(day, -1, datetime'294277-1-9 4:00:54.775807'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
insert into func_test(functionName, result) values('timestampadd(day, -1, datetime''294277-1-9 4:00:54.775806'')', timestampadd(day, -1, datetime'294277-1-9 4:00:54.775806'));
?.*ERROR: date/time field overflow
  Where: referenced column: result
--step8:查看timestampadd函数执行结果是否正确;expect:成功
select * from func_test;
+------------------------------------------------------+----------------------------+
| functionname                                         | result                     |
+------------------------------------------------------+----------------------------+
| TIMESTAMPADD(YEAR,1,'2022-07-27 08:30:00')           | 2023-07-27 08:30:00        |
| TIMESTAMPADD(YEAR,-1,'2022-07-27 08:30:00')          | 2021-07-27 08:30:00        |
| TIMESTAMPADD(MONTH,1,'2022-07-27 08:30:00')          | 2022-08-27 08:30:00        |
| TIMESTAMPADD(MONTH,-1,'2022-07-27 08:30:00')         | 2022-06-27 08:30:00        |
| TIMESTAMPADD(WEEK,1,'2022-07-27 08:30:00')           | 2022-08-03 08:30:00        |
| TIMESTAMPADD(WEEK,-1,'2022-07-27 08:30:00')          | 2022-07-20 08:30:00        |
| TIMESTAMPADD(DAY,1,'2022-07-27 08:30:00')            | 2022-07-28 08:30:00        |
| TIMESTAMPADD(DAY,-1,'2022-07-27 08:30:00')           | 2022-07-26 08:30:00        |
| TIMESTAMPADD(HOUR,1,'2022-07-27 08:30:00')           | 2022-07-27 09:30:00        |
| TIMESTAMPADD(HOUR,-1,'2022-07-27 08:30:00')          | 2022-07-27 07:30:00        |
| TIMESTAMPADD(MINUTE,1,'2022-07-27 08:30:00')         | 2022-07-27 08:31:00        |
| TIMESTAMPADD(MINUTE,-1,'2022-07-27 08:30:00')        | 2022-07-27 08:29:00        |
| TIMESTAMPADD(SECOND,1,'2022-07-27 08:30:00')         | 2022-07-27 08:30:01        |
| TIMESTAMPADD(SECOND,-1,'2022-07-27 08:30:00')        | 2022-07-27 08:29:59        |
| TIMESTAMPADD(DAY,1,'2022-07-27 -01:30:00')           | 2022-07-28 01:30:00        |
| TIMESTAMPADD(HOUR,1,'2022-07-27 -12:30:00')          | 2022-07-27 13:30:00        |
| TIMESTAMPADD(SECOND,-1,'2022-07-27 08:30:-01')       | 2022-07-27 08:30:00        |
| TIMESTAMPADD(SECOND,-1, 20220727083000)              | 2022-07-27 08:29:59        |
| TIMESTAMPADD(SECOND,-1, 20220727083000.000001)       | 2022-07-27 08:29:59.000001 |
| TIMESTAMPADD(MINUTE,-1,'2022-07-27 08:-59:00')       | 2022-07-27 08:58:00        |
| TIMESTAMPADD(YEAR,-1,'2022-07-27 -01:-30:00')        | 2021-07-27 01:30:00        |
| TIMESTAMPADD(HOUR,1,'2022-07-27 23:30:00')           | 2022-07-28 00:30:00        |
| TIMESTAMPADD(HOUR,-1,'2022-07-27 00:30:00')          | 2022-07-26 23:30:00        |
| TIMESTAMPADD(MINUTE,1,'2022-07-27 08:59:59')         | 2022-07-27 09:00:59        |
| TIMESTAMPADD(MINUTE,-1,'2022-07-27 08:00:00')        | 2022-07-27 07:59:00        |
| TIMESTAMPADD(SECOND,1,'2022-07-27 08:30:59')         | 2022-07-27 08:31:00        |
| TIMESTAMPADD(SECOND,-1,'2022-07-27 00:00:00')        | 2022-07-26 23:59:59        |
| TIMESTAMPADD(SECOND,0.001,'2022-07-27 08:30:59.999') | 2022-07-27 08:31:00        |
| TIMESTAMPADD(SECOND,-0.001,'2022-07-27 00:00:00')    | 2022-07-26 23:59:59.999    |
| TIMESTAMPADD(HOUR,true,'2022-04-05')                 | 2022-04-05 01:00:00        |
| TIMESTAMPADD(HOUR,B'11','2022-04-05')                | 2022-04-05 03:00:00        |
| TIMESTAMPADD(HOUR,1,date'2022-04-05')                | 2022-04-05 01:00:00        |
| TIMESTAMPADD(DAY,1,cast('2022-04-05' as datetime))   | 2022-04-06 00:00:00        |
| TIMESTAMPADD(DAY,1,time'14:30:00')                   | 38:30:00                   |
| timestampadd(day, 1, timestamptz'2000-1-1 1:1:1+05') | 2000-01-02 01:01:01.05     |
| timestampadd(day, 1, abstime'2000-1-1 1:1:1+05')     | 2000-01-02 04:01:01.08     |
| timestampadd(day, 1, '23:1:1+05')                    | 2023-01-02 05:00:00        |
| timestampadd(day, 1, '2000-1-1 23:1:1+05')           | 2000-01-02 23:01:01.05     |
+------------------------------------------------------+----------------------------+
--step9:清理环境;expect:成功
drop table if exists func_test;
SQL SUCCESS
