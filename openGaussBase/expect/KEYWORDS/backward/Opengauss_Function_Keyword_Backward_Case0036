-- @testpoint: 定义表名和列名为backward
drop table if exists backward;
SQL SUCCESS
create  table backward(
	c_id int, c_int int, c_integer integer, c_bool int, c_boolean int, c_bigint integer,
	c_real real, c_double real,
	c_decimal decimal(38), c_number number(38), c_numeric numeric(38),
	c_char char(50) default null, c_varchar varchar(20), c_varchar2 varchar2(4000),
	c_dbackwarde date, c_dbackwardetime date, c_timestamp timestamp,
	backward text  default 'gauss'
)
PARTITION BY RANGE (c_integer)
(
	partition P_max values less than (maxvalue)
);
SQL SUCCESS
insert into backward(c_id,backward) values(1,'123');
SQL SUCCESS
select * from backward;
+------+-------+-----------+--------+-----------+----------+--------+----------+-----------+----------+-----------+--------+-----------+------------+--------------+------------------+-------------+----------+
| c_id | c_int | c_integer | c_bool | c_boolean | c_bigint | c_real | c_double | c_decimal | c_number | c_numeric | c_char | c_varchar | c_varchar2 | c_dbackwarde | c_dbackwardetime | c_timestamp | backward |
+------+-------+-----------+--------+-----------+----------+--------+----------+-----------+----------+-----------+--------+-----------+------------+--------------+------------------+-------------+----------+
| 1    |       |           |        |           |          |        |          |           |          |           |        |           |            |              |                  |             | 123      |
+------+-------+-----------+--------+-----------+----------+--------+----------+-----------+----------+-----------+--------+-----------+------------+--------------+------------------+-------------+----------+
drop table if exists backward;
SQL SUCCESS