--  @testpoint:openGauss关键字returned_octet_length(非保留)，作为列名带引号并且更新时使用该列，建表成功，returned_octet_length的值更新为100
drop table if exists returned_octet_length_test;
SQL SUCCESS
create table returned_octet_length_test(
	c_id int, c_int int, c_integer integer, c_bool int, c_boolean int, c_bigint integer, 
	c_real real, c_double real, 
	c_decimal decimal(38), c_number number(38), c_numeric numeric(38), 
	c_char char(50) default null, c_varchar varchar(20), c_varchar2 varchar2(4000),
	c_date date, c_datetime date, c_timestamp timestamp,
	"returned_octet_length" varchar(100) default 'returned_octet_length'
)
PARTITION BY RANGE (c_integer)
(
	partition P_max values less than (maxvalue)
);
SQL SUCCESS
insert into returned_octet_length_test(c_id,"returned_octet_length") values(1,'hello');
SQL SUCCESS
update returned_octet_length_test set "returned_octet_length"=100;
SQL SUCCESS
select * from returned_octet_length_test order by "returned_octet_length";
+------+-------+-----------+--------+-----------+----------+--------+----------+-----------+----------+-----------+--------+-----------+------------+--------+------------+-------------+-----------------------+
| c_id | c_int | c_integer | c_bool | c_boolean | c_bigint | c_real | c_double | c_decimal | c_number | c_numeric | c_char | c_varchar | c_varchar2 | c_date | c_datetime | c_timestamp | returned_octet_length |
+------+-------+-----------+--------+-----------+----------+--------+----------+-----------+----------+-----------+--------+-----------+------------+--------+------------+-------------+-----------------------+
| 1    |       |           |        |           |          |        |          |           |          |           |        |           |            |        |            |             | 100                   |
+------+-------+-----------+--------+-----------+----------+--------+----------+-----------+----------+-----------+--------+-----------+------------+--------+------------+-------------+-----------------------+
drop table returned_octet_length_test;
SQL SUCCESS
