-- @testpoint: openGauss关键字enum(非保留)，作为触发器名，部分测试点合理报错
--前置条件
--创建源表
drop table if exists test_trigger_src_tbl;
SQL SUCCESS
create table test_trigger_src_tbl(id1 int, id2 int, id3 int);
SQL SUCCESS
--创建触发表
drop table if exists test_trigger_des_tbl;
SQL SUCCESS
create table test_trigger_des_tbl(id1 int, id2 int, id3 int);
SQL SUCCESS
--创建触发器函数
create or replace function tri_insert_func() returns trigger as
           $$
           declare
           begin
               insert into test_trigger_des_tbl values(new.id1, new.id2, new.id3);
               return new;
           end
           $$ language plpgsql;
/
SQL SUCCESS
--关键字enum作为作为触发器名，不带引号，创建成功
--创建insert触发器不带引号，创建成功
create trigger enum before insert on test_trigger_src_tbl for each row execute procedure tri_insert_func();
/
SQL SUCCESS
drop trigger enum on test_trigger_src_tbl cascade;
SQL SUCCESS
--关键字enum作为触发器名，加双引号，创建成功
--创建insert触发器带双引号，创建成功
create trigger "enum" before insert on test_trigger_src_tbl for each row execute procedure tri_insert_func();
/
SQL SUCCESS
drop trigger "enum" on test_trigger_src_tbl cascade;
SQL SUCCESS
--关键字enum作为触发器名，加单引号，合理报错
--创建insert触发器带单引号，合理报错
create trigger 'enum' before insert on test_trigger_src_tbl for each row execute procedure tri_insert_func();
/
?.*ERROR: syntax error at or near "'enum'"
?.*Position: .*
--关键字enum作为触发器名，带反引号，合理报错
--创建insert触发器带反单引号，合理报错
create trigger `enum` before insert on test_trigger_src_tbl for each row execute procedure tri_insert_func();
/
?.*ERROR: syntax error at or near "`"
?.*Position: .*
drop table if exists test_trigger_src_tbl;
SQL SUCCESS
drop table if exists test_trigger_des_tbl;
SQL SUCCESS
drop function if exists tri_insert_func;
SQL SUCCESS
