--  @testpoint:使用insert...update插入两条数据,添加关键字EXCLUDED，第一条数据主键列数据不存在，其他列数据已存在;第二条数据主键列数据不存在，其他列数据已存在
--预置条件enable_upsert_to_merge为off
drop table if exists upsert_b1;
SQL SUCCESS
create table upsert_b1(id int primary key,age int,count int);
SQL SUCCESS
--建表，指定一列是主键
--常规插入一条数据
insert into upsert_b1 values (1,1,1),(4,4,4);
SQL SUCCESS
select * from upsert_b1;
+----+-----+-------+
| id | age | count |
+----+-----+-------+
| 1  | 1   | 1     |
| 4  | 4   | 4     |
+----+-----+-------+
--update主键列id为EXCLUDED.id，合理报错
insert into upsert_b1 values(2,1,4),(3,3,5) ON DUPLICATE key update id=EXCLUDED.id;
?.*ERROR: INSERT ON DUPLICATE KEY UPDATE don't allow update on primary key or unique key.
--update age为EXCLUDED.age，新插入两条数据(2,1,4),(3,3,5)
insert into upsert_b1 values(2,1,4),(3,3,5) ON DUPLICATE key update age=EXCLUDED.age;
SQL SUCCESS
select * from upsert_b1;
+----+-----+-------+
| id | age | count |
+----+-----+-------+
| 1  | 1   | 1     |
| 4  | 4   | 4     |
| 2  | 1   | 4     |
| 3  | 3   | 5     |
+----+-----+-------+
delete from upsert_b1;
SQL SUCCESS
insert into upsert_b1 values (1,1,1),(4,4,4);
SQL SUCCESS
--update age为EXCLUDED.age，count为EXCLUDED.count,新插入两条数据(2,1,4),(3,3,5)
insert into upsert_b1 values(2,1,4),(3,3,5) ON DUPLICATE key update  age=EXCLUDED.age,count=EXCLUDED.count;
SQL SUCCESS
select * from upsert_b1;
+----+-----+-------+
| id | age | count |
+----+-----+-------+
| 1  | 1   | 1     |
| 4  | 4   | 4     |
| 2  | 1   | 4     |
| 3  | 3   | 5     |
+----+-----+-------+
drop table upsert_b1;
SQL SUCCESS
