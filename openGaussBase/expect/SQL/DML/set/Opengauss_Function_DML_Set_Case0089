--  @testpoint:使用SET CONSTRAINTS语句，设置多个约束名
--建表同时定义检查约束和主键约束
drop table if exists t4;
SQL SUCCESS
create table t4 (id int check (id >5),name varchar(40) primary key);
SQL SUCCESS
insert into t4 values(6,'a'),(7,'b');
SQL SUCCESS
--查看约束名字
select conname,condeferrable,condeferred from pg_constraint where conrelid = (select oid from pg_class where relname='t4');
+-------------+---------------+-------------+
| conname     | condeferrable | condeferred |
+-------------+---------------+-------------+
?.*t4.*| false         | false       |
?.*t4.*| false         | false       |
+-------------+---------------+-------------+
--开启事务
start transaction;
SQL SUCCESS
--设置当前事务检查行为的约束条件，合理报错（默认是不能推迟的，即NOT DEFERRABLE不能用set命令改变）
SET CONSTRAINTS t4_id_check,t4_pkey DEFERRED;
?.*ERROR: constraint "t4_id_check" is not deferrable
--关闭事务
end;
SQL SUCCESS
--开启事务
start transaction;
SQL SUCCESS
--设置当前事务检查行为的约束条件,立即检查
SET CONSTRAINTS t4_id_check,t4_pkey immediate;
SQL SUCCESS
--修改数据，合理报错（违反检查约束)
update t4 set id =id -2;
?.*ERROR: new row for relation "t4" violates check constraint "t4_id_check"
  Detail: Failing row contains (4, a).
--关闭事务
end;
SQL SUCCESS
drop table t4;
SQL SUCCESS
