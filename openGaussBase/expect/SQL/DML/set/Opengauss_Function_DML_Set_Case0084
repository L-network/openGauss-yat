--  @testpoint:约束建成deferable，使用SET CONSTRAINTS语句设置当前事务检查行为的约束条件（唯一约束）
--建表
drop table if exists t4;
SQL SUCCESS
create table t4 (id int unique DEFERRABLE,name varchar(40));
SQL SUCCESS
--查看约束名字
select conname,condeferrable,condeferred from pg_constraint where conrelid = (select oid from pg_class where relname='t4');
+-----------+---------------+-------------+
| conname   | condeferrable | condeferred |
+-----------+---------------+-------------+
| t4_id_key | true          | false       |
+-----------+---------------+-------------+
--插入数据
insert into t4 values(1,'1111111111111111');
SQL SUCCESS
insert into t4 values(2,'2222222222222222');
SQL SUCCESS
--修改数据，成功
update t4 set id=id+1;
SQL SUCCESS
select * from t4;
+----+------------------+
| id | name             |
+----+------------------+
| 2  | 1111111111111111 |
| 3  | 2222222222222222 |
+----+------------------+
--开启事务
start transaction;
SQL SUCCESS
--设置约束检查条件为IMMEDIATE
SET CONSTRAINTS t4_id_key IMMEDIATE;
SQL SUCCESS
--修改数据,合理报错（立即检查）
update t4 set id=3 where name='1111111111111111';
?.*ERROR: duplicate key value violates unique constraint "t4_id_key"
  Detail: Key (id)=(3) already exists.
--结束事务
end;
SQL SUCCESS
truncate table t4;
SQL SUCCESS
--插入数据
insert into t4 values(1,'1111111111111111');
SQL SUCCESS
insert into t4 values(2,'2222222222222222');
SQL SUCCESS
--开启事务
start transaction;
SQL SUCCESS
--设置约束检查条件为DEFERRED
SET CONSTRAINTS t4_id_key DEFERRED;
SQL SUCCESS
--修改数据,修改成功
update t4 set id=2 where id=1;
SQL SUCCESS
select * from t4;
+----+------------------+
| id | name             |
+----+------------------+
| 2  | 2222222222222222 |
| 2  | 1111111111111111 |
+----+------------------+
--结束事务(提交时，才检查约束，合理报错，主键冲突)
end;
?.*ERROR: duplicate key value violates unique constraint "t4_id_key"
  Detail: Key (id)=(2) already exists.
--数据回到未更新前
select * from t4;
+----+------------------+
| id | name             |
+----+------------------+
| 1  | 1111111111111111 |
| 2  | 2222222222222222 |
+----+------------------+
--删表
drop table t4;
SQL SUCCESS
