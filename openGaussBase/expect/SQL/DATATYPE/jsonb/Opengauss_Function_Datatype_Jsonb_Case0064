-- @testpoint: 通用函数：jsonb_array_element（将输入数组中指定元素返回为json对象，同操作符 ->，当入参不合理时，合理报错）
--jsonb_array_element函数，入参合理
select jsonb_array_element('[1,true,[1,[2,3]],null]',2);
+---------------------+
| jsonb_array_element |
+---------------------+
| [1, [2, 3]]         |
+---------------------+
select jsonb_array_element('[{"a":"foo"},{"b":"bar"},{"c":"baz"}]',3);
+---------------------+
| jsonb_array_element |
+---------------------+
|                     |
+---------------------+
select jsonb_array_element('[138,0.58,-369,1.25e+6]',2.8);
+---------------------+
| jsonb_array_element |
+---------------------+
| 1250000             |
+---------------------+
select jsonb_array_element('[138,0.58,-369,1.25e+6]',2.4);
+---------------------+
| jsonb_array_element |
+---------------------+
| -369                |
+---------------------+
select jsonb_array_element('[{"a":"foo"},{"b":"bar"},{"c":"baz"}]',true);
+---------------------+
| jsonb_array_element |
+---------------------+
| {"b": "bar"}        |
+---------------------+
select jsonb_array_element('[{"a":"foo"},{"b":"bar"},{"c":"baz"}]',false);
+---------------------+
| jsonb_array_element |
+---------------------+
| {"a": "foo"}        |
+---------------------+
--jsonb_array_element函数，入参不合理，合理报错
select jsonb_array_element('["a","foo","b","bar","c","baz"]',"b");
?.*ERROR: column "b" does not exist.*
?.*
  Where: referenced column: jsonb_array_element
select jsonb_array_element('138,852,1323',1);
?.*ERROR: invalid input syntax for type json.*
  Detail: Expected end of input, but found ",".
?.*
  Where: JSON data, line 1: 138,...
referenced column: jsonb_array_element
select jsonb_array_element('{"a":1,"b":2,"c":3}',1);
?.*ERROR: cannot call jsonb_array_element \(jsonb -> int operator\) on an objec.*
  Where: referenced column: jsonb_array_element
--返回结果类型校验：jsonb
select pg_typeof(jsonb_array_element('[{"a":"foo"},{"b":"bar"},{"c":"baz"}]',3));
+-----------+
| pg_typeof |
+-----------+
| jsonb     |
+-----------+
