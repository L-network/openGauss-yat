-- @testpoint: 所有输入都是相同的类型，并且不是unknown类型，解析成这种类型
-- @testpoint:所有输入都是相同的类型，并且不是unknown类型进行union：success
explain performance SELECT 123::int union SELECT 456::int;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \(123\).*
?.*
?.*
?.*Output: \(123\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: 123.*
?.*
?.*
?.*Output: 456.*
?.*
?.*
?.*
explain performance SELECT 123.456::float8 union SELECT 456.123::float8 union SELECT 789.123::float8;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
explain performance SELECT 123.456::REAL union SELECT 456.123::REAL union SELECT 789.123::REAL;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \(123.45600128::real\).*
?.*
?.*
?.*
?.*
?.*
?.*Output: 123.45600128::real.*
?.*
?.*
?.*Output: 456.12298584::real.*
?.*
?.*
?.*Output: 789.12298584::real.*
?.*
?.*
?.*
explain performance SELECT 123::text union SELECT 456::text;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \('123'::text\).*
?.*
?.*
?.*Output: \('123'::text\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: '123'::text.*
?.*
?.*
?.*Output: '456'::text.*
?.*
?.*
?.*
explain performance SELECT 123::clob union SELECT 456::clob;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \('123'::clob\).*
?.*
?.*
?.*Output: \('123'::clob\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: '123'::clob.*
?.*
?.*
?.*Output: '456'::clob.*
?.*
?.*
?.*
explain performance SELECT 'test29'::name union SELECT 'test29'::name;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \('test29'::name\).*
?.*
?.*
?.*Output: \('test29'::name\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: 'test29'::name.*
?.*
?.*
?.*Output: 'test29'::name.*
?.*
?.*
?.*
explain performance SELECT '2020-09-28'::date union SELECT '2020-09-30'::date;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \('2020-09-28 00:00:00'::timestamp\(0\) without time zone\).*
?.*
?.*
?.*Output: \('2020-09-28 00:00:00'::timestamp\(0\) without time zone\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: '2020-09-28 00:00:00'::timestamp\(0\) without time zone.*
?.*
?.*
?.*Output: '2020-09-30 00:00:00'::timestamp\(0\) without time zone.*
?.*
?.*
?.*
explain performance SELECT HEXTORAW('DEADBEEF')::raw union SELECT HEXTORAW('DEABEEF')::raw;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \('DEADBEEF'::raw\).*
?.*
?.*
?.*Output: \('DEADBEEF'::raw\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: 'DEADBEEF'::raw.*
?.*
?.*
?.*Output: '0DEABEEF'::raw.*
?.*
?.*
?.*
explain performance SELECT 'fat & rat'::tsquery union SELECT 'sate & rat'::tsquery;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \('''fat'' & ''rat'''::tsquery\).*
?.*
?.*
?.*Output: \('''fat'' & ''rat'''::tsquery\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: '''fat'' & ''rat'''::tsquery.*
?.*
?.*
?.*Output: '''sate'' & ''rat'''::tsquery.*
?.*
?.*
?.*
explain performance SELECT inet '0.0.0.0/24'::inet union SELECT inet '0.0.0.0/24'::inet;
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \('0.0.0.0/24'::inet\).*
?.*
?.*
?.*Output: \('0.0.0.0/24'::inet\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: '0.0.0.0/24'::inet.*
?.*
?.*
?.*Output: '0.0.0.0/24'::inet.*
?.*
?.*
?.*
explain performance SELECT B'1'::bit union SELECT B'101'::bit(3);
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*Output: \(B'1'::bit\(1\)\).*
?.*
?.*
?.*Output: \(B'1'::bit\(1\)\).*
?.*
?.*
?.*
?.*
?.*
?.*
?.*
?.*Output: B'1'::bit\(1\).*
?.*
?.*
?.*Output: B'101'::bit\(3\).*
?.*
?.*
?.*
--清理环境
--no need to clean
