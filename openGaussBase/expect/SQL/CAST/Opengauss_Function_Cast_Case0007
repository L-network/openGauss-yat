-- @testpoint: int2类型转换
--查询源数据类型和目标数据类型间的转化方式：
--'e'：表示只能进行显式转化（使用CAST或::语法）。
--'i'：表示只能进行隐式转化。
--'a'：表示类型间同时支持隐式和显式转化。
--转化方法：
--'f'：使用castfunc字段中指定的函数进行转化。
--'b'：类型间是二进制强制转化，不使用castfunc。
select typname,proname,castcontext,castmethod from pg_cast c
join pg_type t on t.oid=c.casttarget
left join pg_proc p on p.oid=c.castfunc
where c.oid in (select oid from pg_cast
where castsource= (select oid from pg_type where typname='int2'));
+---------------+--------------+-------------+------------+
| typname       | proname      | castcontext | castmethod |
+---------------+--------------+-------------+------------+
| int1          | i2toi1       | i           | f          |
| int8          | int8         | i           | f          |
| int4          | int4         | i           | f          |
| float4        | float4       | i           | f          |
| float8        | float8       | i           | f          |
| numeric       | numeric      | i           | f          |
| int16         | int16        | i           | f          |
| bool          | int2_bool    | i           | f          |
| interval      | numtoday     | i           | f          |
| oid           | int4         | i           | f          |
| regproc       | int4         | i           | f          |
| regprocedure  | int4         | i           | f          |
| regoper       | int4         | i           | f          |
| regoperator   | int4         | i           | f          |
| regclass      | int4         | i           | f          |
| regtype       | int4         | i           | f          |
| regconfig     | int4         | i           | f          |
| regdictionary | int4         | i           | f          |
| text          | int2_text    | i           | f          |
| clob          | int2_text    | i           | f          |
| varchar       | int2_varchar | i           | f          |
| bpchar        | int2_bpchar  | i           | f          |
| nvarchar2     | to_nvarchar2 | i           | f          |
+---------------+--------------+-------------+------------+
--建表
drop table if exists test_cast_0007 cascade;
SQL SUCCESS
create table test_cast_0007(
c_int1 int1,
c_int8 int8,
c_int4 int4,
c_float4 float4,
c_float8 float8,
c_numeric numeric,
c_bool bool,
c_interval interval,
c_oid oid,
c_regproc regproc,
c_regprocedure regprocedure,
c_regoper regoper,
c_regoperator regoperator,
c_regclass regclass,
c_regtype regtype,
c_regconfig regconfig,
c_regdictionary regdictionary,
c_text text,
c_clob clob,
c_varchar varchar,
c_bpchar bpchar,
c_nvarchar2 nvarchar2
);
SQL SUCCESS
--查询转换计划
--test point：隐式转换
explain performance insert into test_cast_0007 values(
7::int2,
7::int2,
7::int2,
1.0007::int2,
1.0007::int2,
1.0007::int2,
1::int2,
7::int2,
7::int2,
7::int2,
7::int2,
7::int2,
7::int2,
7::int2,
7::int2,
7::int2,
7::int2,
'0007'::int2,
'0007'::int2,
'0007'::int2,
'0007'::int2,
'0007'::int2
);
?.*
?.*QUERY PLAN.*
?.*
?.*
?.*
?.*
?.*
?.*
|         Output: '7'::tinyint, 7::bigint, 7, 1::real, 1::double precision, 1::numeric, true, '7 days'::interval, 7::oid, '7'::regproc, '7'::regprocedure, '7'::regoper, '7'::regoperator, '7'::regclass, '7'::regtype, '7'::regconfig, '7'::regdictionary, '7'::text, '7'::clob, '7'::character varying, '7'::bpchar, '7'::nvarchar2 |
?.*
?.*
?.*
--清理数据
drop table if exists test_cast_0007 cascade;
SQL SUCCESS
