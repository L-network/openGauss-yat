--  @testpoint: create gin index:多字段索引(4)分区表 不同配置
SET ENABLE_SEQSCAN=off;
SQL SUCCESS
RESET ENABLE_INDEXSCAN;
SQL SUCCESS
RESET ENABLE_BITMAPSCAN;
SQL SUCCESS
show ENABLE_SEQSCAN;
+----------------+
| enable_seqscan |
+----------------+
| off            |
+----------------+
show ENABLE_INDEXSCAN;
+------------------+
| enable_indexscan |
+------------------+
| on               |
+------------------+
show ENABLE_BITMAPSCAN;
+-------------------+
| enable_bitmapscan |
+-------------------+
| on                |
+-------------------+
--partition table
DROP TABLE IF EXISTS test_gin_student_column;
SQL SUCCESS
CREATE TABLE test_gin_student_column
(
    num int,
    data1 text,
    data2 text,
    test1 text,
    test2 text
) WITH (ORIENTATION = COLUMN)
PARTITION BY RANGE(num)
(
    PARTITION num1 VALUES LESS THAN(10000),
    PARTITION num2 VALUES LESS THAN(20000),
    PARTITION num3 VALUES LESS THAN(300000)
);
SQL SUCCESS
DROP TABLE IF EXISTS test_gin_student_row;
SQL SUCCESS
CREATE TABLE test_gin_student_row
(
    num int,
    data1 text,
    data2 text,
    test1 text,
    test2 text
)
PARTITION BY RANGE(num)
(
    PARTITION num1 VALUES LESS THAN(10000),
    PARTITION num2 VALUES LESS THAN(20000),
    PARTITION num3 VALUES LESS THAN(300000)
);
SQL SUCCESS
--create gin index
--refer to special partition
CREATE INDEX test_gin_student_index_column1 ON test_gin_student_column USING GIN(to_tsvector('english', data1),to_tsvector('english', data2),to_tsvector('english', test1),to_tsvector('simple', test2)) LOCAL ;
SQL SUCCESS
--refer to special partition
CREATE INDEX test_gin_student_index_column2 ON test_gin_student_column USING GIN(to_tsvector('english', data1),to_tsvector('english', data2),to_tsvector('english', test1),to_tsvector('simple', test2))  LOCAL
(
    PARTITION data2_index_1,
    PARTITION data2_index_2,
    PARTITION data2_index_3 
) ;
SQL SUCCESS
--didn't refer to special partition 
CREATE INDEX test_gin_student_index_row1 ON test_gin_student_row USING GIN(to_tsvector('english', data1),to_tsvector('english', data2),to_tsvector('english', test1),to_tsvector('simple', test2)) LOCAL ;
SQL SUCCESS
--refer to special partition
CREATE INDEX test_gin_student_index_row2 ON test_gin_student_row USING GIN(to_tsvector('english', data1),to_tsvector('english', data2),to_tsvector('english', test1),to_tsvector('simple', test2)) LOCAL
(
    PARTITION data2_index_1,
    PARTITION data2_index_2,
    PARTITION data2_index_3 
) ;
SQL SUCCESS
--insert data
INSERT INTO test_gin_student_column SELECT num, md5(random()::text), md5(random()::text) , md5(random()::text) , md5(random()::text) FROM (SELECT * FROM generate_series(1,200000) AS num) AS x;
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(1, 'China, officially the People''s Republic of China (PRC), located in Asia, is the world''s most populous state.', 'China','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(2, 'America is a rock band, formed in England in 1970 by multi-instrumentalists Dewey Bunnell, Dan Peek, and Gerry Beckley.', 'America','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(3, 'England is a country that is part of the United Kingdom. It shares land borders with Scotland to the north and Wales to the west.', 'England','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(4, 'Australia, officially the Commonwealth of Australia, is a country comprising the mainland of the Australian continent, the island of Tasmania, and numerous smaller islands.', 'Australia','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(5, 'Russia, also officially known as the Russian Federation, is a sovereign state in northern Eurasia.', 'Russia','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(6, 'Japan is an island country in East Asia.', 'Japan','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(7, 'Germany, officially the Federal Republic of Germany, is a sovereign state and federal parliamentary republic in central-western Europe.','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(8, 'France, is a sovereign state comprising territory in western Europe and several overseas regions and territories.', 'France');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(9, 'Italy officially the Italian Republic, is a unitary parliamentary republic in Europe.', 'Italy','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(10, 'India, officially the Republic of India, is a country in South Asia.', 'India','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(11, 'Brazil, officially the Federative Republic of Brazil, is the largest country in both South America and Latin America.', 'Brazil','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(12, 'Canada is a country in the northern half of North America.', 'Canada','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(13, 'Mexico, officially the United Mexican States, is a federal republic in the southern part of North America.', 'Mexico','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(13, 'Mexico, officially the United Mexican States, is a federal republic in the southern part of North America.', 'Mexico','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(14, 'Mexico, officially the United Mexican States, is a federal republic in the southern part of North America.', 'Mexicox','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_column VALUES(20001, 'Mexico, officially the United Mexican States, is a federal republic in the southern part of North America.', 'Mexicos','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row SELECT num, md5(random()::text), md5(random()::text) , md5(random()::text) , md5(random()::text) FROM (SELECT * FROM generate_series(1,200000) AS num) AS x;
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(1, 'China, officially the People''s Republic of China (PRC), located in Asia, is the world''s most populous state.', 'China','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(2, 'America is a rock band, formed in England in 1970 by multi-instrumentalists Dewey Bunnell, Dan Peek, and Gerry Beckley.', 'America','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(3, 'England is a country that is part of the United Kingdom. It shares land borders with Scotland to the north and Wales to the west.', 'England','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(4, 'Australia, officially the Commonwealth of Australia, is a country comprising the mainland of the Australian continent, the island of Tasmania, and numerous smaller islands.', 'Australia','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(5, 'Russia, also officially known as the Russian Federation, is a sovereign state in northern Eurasia.', 'Russia','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(6, 'Japan is an island country in East Asia.', 'Japan','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(7, 'Germany, officially the Federal Republic of Germany, is a sovereign state and federal parliamentary republic in central-western Europe.','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(8, 'France, is a sovereign state comprising territory in western Europe and several overseas regions and territories.', 'France');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(9, 'Italy officially the Italian Republic, is a unitary parliamentary republic in Europe.', 'Italy','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(10, 'India, officially the Republic of India, is a country in South Asia.', 'India','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(11, 'Brazil, officially the Federative Republic of Brazil, is the largest country in both South America and Latin America.', 'Brazil','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(12, 'Canada is a country in the northern half of North America.', 'Canada','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(13, 'Mexico, officially the United Mexican States, is a federal republic in the southern part of North America.', 'Mexico','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(13, 'Mexico, officially the United Mexican States, is a federal republic in the southern part of North America.', 'Mexico','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(14, 'Mexico, officially the United Mexican States, is a federal republic in the southern part of North America.', 'Mexicox','China', 'China, officially the People');
SQL SUCCESS
INSERT INTO test_gin_student_row VALUES(20001, 'Mexico, officially the United Mexican States, is a federal republic in the southern part of North America.', 'Mexicos','China', 'China, officially the People');
SQL SUCCESS
--query
explain SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') and to_tsvector('english', test1) @@ to_tsquery('english', 'China');
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                                                                                                                                                           |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
?.*| Row Adapter  .*
?.*|   ->  Vector Partition Iterator  .*
|         Iterations: 3                                                                                                                                                                                                                                |
?.*|         ->  Partitioned CStore Index Heap Scan on test_gin_student_column  .*
|               Recheck Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, test1) @@ '''china'''::tsquery))     |
|               Selected Partitions:  1..3                                                                                                                                                                                                             |
?.*|               ->  Partitioned CStore Index Ctid Scan on test_gin_student_index_column2.*
|                     Index Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, test1) @@ '''china'''::tsquery)) |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') and to_tsvector('english', test1) @@ to_tsquery('english', 'China');
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
| num   | data1                                                                                                      | data2   | test1 | test2                        |
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
| 13    | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexico  | China | China, officially the People |
| 13    | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexico  | China | China, officially the People |
| 20001 | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexicos | China | China, officially the People |
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
explain SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') and to_tsvector('simple', test2) @@ to_tsquery('english', 'China');
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                                                                                                                                                          |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
?.*| Row Adapter  .*
?.*|   ->  Vector Partition Iterator  .*
|         Iterations: 3                                                                                                                                                                                                                               |
?.*|         ->  Partitioned CStore Index Heap Scan on test_gin_student_column  .*
|               Recheck Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery) AND (to_tsvector('simple'::regconfig, test2) @@ '''china'''::tsquery))     |
|               Selected Partitions:  1..3                                                                                                                                                                                                            |
?.*|               ->  Partitioned CStore Index Ctid Scan on test_gin_student_index_column2 .*
|                     Index Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery) AND (to_tsvector('simple'::regconfig, test2) @@ '''china'''::tsquery)) |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') and to_tsvector('simple', test2) @@ to_tsquery('english', 'China');
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
| num   | data1                                                                                                      | data2   | test1 | test2                        |
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
| 13    | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexico  | China | China, officially the People |
| 13    | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexico  | China | China, officially the People |
| 20001 | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexicos | China | China, officially the People |
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
explain SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') and to_tsvector('simple', test2) @@ to_tsquery('english', 'Mexico');
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                                                                                                                                                           |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
?.*| Row Adapter  .*
?.*|   ->  Vector Partition Iterator  .*
|         Iterations: 3                                                                                                                                                                                                                                |
?.*|         ->  Partitioned CStore Index Heap Scan on test_gin_student_column  .*
|               Recheck Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery) AND (to_tsvector('simple'::regconfig, test2) @@ '''mexico'''::tsquery))     |
|               Selected Partitions:  1..3                                                                                                                                                                                                             |
?.*|               ->  Partitioned CStore Index Ctid Scan on test_gin_student_index_column2.*
|                     Index Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery) AND (to_tsvector('simple'::regconfig, test2) @@ '''mexico'''::tsquery)) |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') and to_tsvector('simple', test2) @@ to_tsquery('english', 'Mexico');
+-----+-------+-------+-------+-------+
| num | data1 | data2 | test1 | test2 |
+-----+-------+-------+-------+-------+
+-----+-------+-------+-------+-------+
explain SELECT * FROM test_gin_student_row WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') ORDER BY num, data1, data2;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
?.*| Sort  .*
|   Sort Key: num, data1, data2                                                                                                                                                 |
?.*|   ->  Partition Iterator.*
|         Iterations: 3                                                                                                                                                         |
?.*|         ->  Partitioned Bitmap Heap Scan on test_gin_student_row.*
|               Recheck Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery))     |
|               Selected Partitions:  1..3                                                                                                                                      |
?.*|               ->  Partitioned Bitmap Index Scan on test_gin_student_index_row2 .*
|                     Index Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery)) |
|                     Selected Partitions:  1..3                                                                                                                                |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
SELECT * FROM test_gin_student_row WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') ORDER BY num, data1, data2;
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
| num   | data1                                                                                                      | data2   | test1 | test2                        |
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
| 13    | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexico  | China | China, officially the People |
| 13    | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexico  | China | China, officially the People |
| 20001 | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexicos | China | China, officially the People |
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
explain SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') and to_tsvector('simple', test2) @@ to_tsquery('simple', 'China');
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                                                                                                                                                          |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
?.*| Row Adapter  .*
?.*|   ->  Vector Partition Iterator  .*
|         Iterations: 3                                                                                                                                                                                                                               |
?.*|         ->  Partitioned CStore Index Heap Scan on test_gin_student_column  .*
|               Recheck Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery) AND (to_tsvector('simple'::regconfig, test2) @@ '''china'''::tsquery))     |
|               Selected Partitions:  1..3                                                                                                                                                                                                            |
?.*|               ->  Partitioned CStore Index Ctid Scan on test_gin_student_index_column2 .*
|                     Index Cond: ((to_tsvector('english'::regconfig, data1) @@ '''mexico'''::tsquery) AND (to_tsvector('english'::regconfig, data2) @@ '''mexico'''::tsquery) AND (to_tsvector('simple'::regconfig, test2) @@ '''china'''::tsquery)) |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'Mexico') and  to_tsvector('english', data2) @@ to_tsquery('english', 'Mexico') and to_tsvector('simple', test2) @@ to_tsquery('simple', 'China');
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
| num   | data1                                                                                                      | data2   | test1 | test2                        |
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
| 13    | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexico  | China | China, officially the People |
| 13    | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexico  | China | China, officially the People |
| 20001 | Mexico, officially the United Mexican States, is a federal republic in the southern part of North America. | Mexicos | China | China, officially the People |
+-------+------------------------------------------------------------------------------------------------------------+---------+-------+------------------------------+
--tearDown drop table
DROP TABLE test_gin_student_row;
SQL SUCCESS
DROP TABLE test_gin_student_column;
SQL SUCCESS
