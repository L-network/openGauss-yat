--  @testpoint: create gin index:FASTUPDATE=off
SET ENABLE_SEQSCAN=off;
SQL SUCCESS
RESET ENABLE_INDEXSCAN;
SQL SUCCESS
RESET ENABLE_BITMAPSCAN;
SQL SUCCESS
show ENABLE_SEQSCAN;
+----------------+
| enable_seqscan |
+----------------+
| off            |
+----------------+
show ENABLE_INDEXSCAN;
+------------------+
| enable_indexscan |
+------------------+
| on               |
+------------------+
show ENABLE_BITMAPSCAN;
+-------------------+
| enable_bitmapscan |
+-------------------+
| on                |
+-------------------+
--partition table
DROP TABLE IF EXISTS test_gin_student_column;
SQL SUCCESS
CREATE TABLE test_gin_student_column
(
    num int,
    data1 text,
    data2 text
) WITH (ORIENTATION = COLUMN)
PARTITION BY RANGE(num)
(
    PARTITION num1 VALUES LESS THAN(10000),
    PARTITION num2 VALUES LESS THAN(20000),
    PARTITION num3 VALUES LESS THAN(300000)
);
SQL SUCCESS
DROP TABLE IF EXISTS test_gin_student_row;
SQL SUCCESS
CREATE TABLE test_gin_student_row
(
    num int,
    data1 text,
    data2 text
)
PARTITION BY RANGE(num)
(
    PARTITION num1 VALUES LESS THAN(10000),
    PARTITION num2 VALUES LESS THAN(20000),
    PARTITION num3 VALUES LESS THAN(300000)
);
SQL SUCCESS
--insert data
INSERT INTO test_gin_student_column SELECT num, md5(random()::text), md5(random()::text) FROM (SELECT * FROM generate_series(1,200000) AS num) AS x;
SQL SUCCESS
INSERT INTO test_gin_student_row SELECT num, md5(random()::text), md5(random()::text) FROM (SELECT * FROM generate_series(1,200000) AS num) AS x;
SQL SUCCESS
--create gin index
--didn't refer to special partition 
CREATE INDEX test_gin_student_index_column1 ON test_gin_student_column USING GIN(to_tsvector('english', data1)) LOCAL with (FASTUPDATE=off) ;
SQL SUCCESS
--refer to special partition
CREATE INDEX test_gin_student_index_column2 ON test_gin_student_column USING GIN(to_tsvector('english', data2))  LOCAL
(
    PARTITION data2_index_1,
    PARTITION data2_index_2,
    PARTITION data2_index_3 
) with (FASTUPDATE=off);
SQL SUCCESS
--didn't refer to special partition 
CREATE INDEX test_gin_student_index_row1 ON test_gin_student_row USING GIN(to_tsvector('english', data1)) LOCAL with (FASTUPDATE=off) ;
SQL SUCCESS
--refer to special partition
CREATE INDEX test_gin_student_index_row2 ON test_gin_student_row USING GIN(to_tsvector('english', data2)) LOCAL
(
    PARTITION data2_index_1,
    PARTITION data2_index_2,
    PARTITION data2_index_3 
) with (FASTUPDATE=off) ;
SQL SUCCESS
--query
explain SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'test') ORDER BY num, data1, data2;
+--------------------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------+
?.*| Row Adapter  .*
?.*|   ->  Vector Sort  .*
|         Sort Key: num, data1, data2                                                                                            |
?.*|         ->  Vector Partition Iterator  .*
|               Iterations: 3                                                                                                    |
?.*|               ->  Partitioned CStore Index Heap Scan on test_gin_student_column.*
|                     Recheck Cond: (to_tsvector('english'::regconfig, data1) @@ '''test'''::tsquery)                            |
|                     Selected Partitions:  1..3                                                                                 |
?.*|                     ->  Partitioned CStore Index Ctid Scan on test_gin_student_index_column1.*
|                           Index Cond: (to_tsvector('english'::regconfig, data1) @@ '''test'''::tsquery)                        |
+--------------------------------------------------------------------------------------------------------------------------------+
explain SELECT * FROM test_gin_student_row WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'test') ORDER BY num, data1, data2;
+----------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------+
?.*| Sort .*
|   Sort Key: num, data1, data2                                                                                        |
?.*|   ->  Partition Iterator  .*
|         Iterations: 3                                                                                                |
?.*|         ->  Partitioned Bitmap Heap Scan on test_gin_student_row  .*
|               Recheck Cond: (to_tsvector('english'::regconfig, data1) @@ '''test'''::tsquery)                        |
|               Selected Partitions:  1..3                                                                             |
?.*|               ->  Partitioned Bitmap Index Scan on test_gin_student_index_row1  .*
|                     Index Cond: (to_tsvector('english'::regconfig, data1) @@ '''test'''::tsquery)                    |
|                     Selected Partitions:  1..3                                                                       |
+----------------------------------------------------------------------------------------------------------------------+
explain SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data2) @@ to_tsquery('english', 'test') ORDER BY num, data1, data2;
+--------------------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------+
?.*| Row Adapter  .*
?.*|   ->  Vector Sort  .*
|         Sort Key: num, data1, data2                                                                                            |
?.*|         ->  Vector Partition Iterator  .*
|               Iterations: 3                                                                                                    |
?.*|               ->  Partitioned CStore Index Heap Scan on test_gin_student_column.*
|                     Recheck Cond: (to_tsvector('english'::regconfig, data2) @@ '''test'''::tsquery)                            |
|                     Selected Partitions:  1..3                                                                                 |
?.*|                     ->  Partitioned CStore Index Ctid Scan on test_gin_student_index_column2 .*
|                           Index Cond: (to_tsvector('english'::regconfig, data2) @@ '''test'''::tsquery)                        |
+--------------------------------------------------------------------------------------------------------------------------------+
explain SELECT * FROM test_gin_student_row WHERE to_tsvector('english', data2) @@ to_tsquery('english', 'test') ORDER BY num, data1, data2;
+----------------------------------------------------------------------------------------------------------------------+
| QUERY PLAN                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------+
?.*| Sort .*
|   Sort Key: num, data1, data2                                                                                        |
?.*|   ->  Partition Iterator  .*
|         Iterations: 3                                                                                                |
?.*|         ->  Partitioned Bitmap Heap Scan on test_gin_student_row  .*
|               Recheck Cond: (to_tsvector('english'::regconfig, data2) @@ '''test'''::tsquery)                        |
|               Selected Partitions:  1..3                                                                             |
?.*|               ->  Partitioned Bitmap Index Scan on test_gin_student_index_row2.*
|                     Index Cond: (to_tsvector('english'::regconfig, data2) @@ '''test'''::tsquery)                    |
|                     Selected Partitions:  1..3                                                                       |
+----------------------------------------------------------------------------------------------------------------------+
--query & check result
SELECT * FROM test_gin_student_column WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'test') ORDER BY num, data1, data2;
+-----+-------+-------+
| num | data1 | data2 |
+-----+-------+-------+
+-----+-------+-------+
SELECT * FROM test_gin_student_row WHERE to_tsvector('english', data1) @@ to_tsquery('english', 'test') ORDER BY num, data1, data2;
+-----+-------+-------+
| num | data1 | data2 |
+-----+-------+-------+
+-----+-------+-------+
--tearDown drop table
DROP TABLE test_gin_student_row;
SQL SUCCESS
DROP TABLE test_gin_student_column;
SQL SUCCESS
