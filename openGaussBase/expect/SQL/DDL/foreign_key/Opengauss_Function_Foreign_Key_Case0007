-- @testpoint: 测试外键表对临时表的支持情况，合理报错
--测试点1：父表为临时表（会话级本地临时表），子表为行存表
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
create temporary table teacher
(
    t_id int primary key,
    t_name char(16) not null
) On Commit Preserve Rows;
SQL SUCCESS
create table student
(
    s_id int primary key,
    t_id int references teacher (t_id) on update cascade on delete set null
);
?.*ERROR: constraints on permanent tables may reference only permanent tables
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
--测试点2：父表为行存表，子表为临时表（事务级本地临时表）
START TRANSACTION;
SQL SUCCESS
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
create table teacher
(
    t_id int primary key,
    t_name char(16) not null
);
SQL SUCCESS
create temporary table student
(
    s_id int primary key,
    t_id int references teacher (t_id) on update cascade on delete set null
) On Commit Delete Rows;
?.*ERROR: constraints on temporary tables may reference only temporary tables
drop table if exists student;
?.*ERROR: current transaction is aborted, commands ignored until end of transaction block?.*
drop table if exists teacher;
?.*ERROR: current transaction is aborted, commands ignored until end of transaction block?.*
END;
SQL SUCCESS
--测试点3：父表为临时表，子表为临时表
--3.1 父表为事务级本地临时表，子表为事务级本地临时表
START TRANSACTION;
SQL SUCCESS
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
create temporary table teacher
(
    t_id int primary key,
    t_name char(16) not null
) On Commit Delete Rows;
SQL SUCCESS
create temporary table student
(
    s_id int primary key,
    t_id int references teacher (t_id) on update CASCADE on delete set null
) On Commit Delete Rows;
SQL SUCCESS
insert into teacher values (2017100001, '张老师');
SQL SUCCESS
insert into student values (2017200001, 2017100001);
SQL SUCCESS
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200001 | 2017100001 |
+------------+------------+
update teacher set t_id = 2018100001 where t_id = 2017100001;
SQL SUCCESS
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200001 | 2018100001 |
+------------+------------+
delete from teacher where t_id = 2018100001;
SQL SUCCESS
select * from student;
+------------+------+
| s_id       | t_id |
+------------+------+
| 2017200001 |      |
+------------+------+
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
END;
SQL SUCCESS
--3.2 父表为会话级本地临时表，子表为会话级本地临时表
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
create temporary table teacher
(
    t_id int primary key,
    t_name char(16) not null
) On Commit Preserve Rows;
SQL SUCCESS
create temporary table student
(
    s_id int primary key,
    t_id int references teacher (t_id) on update no action on delete restrict
) On Commit Preserve Rows;
SQL SUCCESS
insert into teacher values (2017100001, '张老师');
SQL SUCCESS
insert into student values (2017200001, 2017100001);
SQL SUCCESS
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200001 | 2017100001 |
+------------+------------+
update teacher set t_id = 2018100001 where t_id = 2017100001;
?.*ERROR: update or delete on table "teacher" violates foreign key constraint "student_t_id_fkey" on table "student"
  Detail: Key (t_id)=(2017100001) is still referenced from table "student".
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200001 | 2017100001 |
+------------+------------+
delete from teacher where t_id = 2017100001;
?.*ERROR: update or delete on table "teacher" violates foreign key constraint "student_t_id_fkey" on table "student"
  Detail: Key (t_id)=(2017100001) is still referenced from table "student".
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200001 | 2017100001 |
+------------+------------+
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
--3.3 父表为事务级临时表，子表为会话级临时表
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
start TRANSACTION;
SQL SUCCESS
create temporary table teacher
(
    t_id int primary key,
    t_name char(16) not null
) On Commit Delete Rows;
SQL SUCCESS
create temporary table student
(
    s_id int primary key,
    t_id int references teacher (t_id) on update set null on delete no action
) On Commit Preserve Rows;
SQL SUCCESS
insert into teacher values (2017100001, '张老师');
SQL SUCCESS
insert into teacher values (2017100002, '李老师');
SQL SUCCESS
insert into student values (2017200001, 2017100001);
SQL SUCCESS
insert into student values (2017200002, 2017100002);
SQL SUCCESS
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200001 | 2017100001 |
| 2017200002 | 2017100002 |
+------------+------------+
update teacher set t_id = 2018100001 where t_id = 2017100001;
SQL SUCCESS
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200002 | 2017100002 |
| 2017200001 |            |
+------------+------------+
delete from teacher where t_id = 2017100002;
?.*ERROR: update or delete on table "teacher" violates foreign key constraint "student_t_id_fkey" on table "student"
  Detail: Key (t_id)=(2017100002) is still referenced from table "student".
select * from student;
?.*ERROR: current transaction is aborted, commands ignored until end of transaction block?.*
drop table if exists student;
?.*ERROR: current transaction is aborted, commands ignored until end of transaction block?.*
drop table if exists teacher;
?.*ERROR: current transaction is aborted, commands ignored until end of transaction block?.*
end;
SQL SUCCESS
--3.4 父表为会话级临时表，子表为事务级临时表
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
start TRANSACTION;
SQL SUCCESS
create temporary table teacher
(
    t_id int primary key,
    t_name char(16) not null
) On Commit Preserve Rows;
SQL SUCCESS
create temporary table student
(
    s_id int primary key,
    t_id int default 2017100003 references teacher (t_id) on update set default on delete set default
) On Commit Delete Rows;
SQL SUCCESS
insert into teacher values (2017100001, '张老师');
SQL SUCCESS
insert into teacher values (2017100002, '李老师');
SQL SUCCESS
insert into teacher values (2017100003, '田老师');
SQL SUCCESS
insert into student values (2017200001, 2017100001);
SQL SUCCESS
insert into student values (2017200002, 2017100002);
SQL SUCCESS
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200001 | 2017100001 |
| 2017200002 | 2017100002 |
+------------+------------+
update teacher set t_id = 2018100001 where t_id = 2017100001;
SQL SUCCESS
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200002 | 2017100002 |
| 2017200001 | 2017100003 |
+------------+------------+
delete from teacher where t_id = 2017100002;
SQL SUCCESS
select * from student;
+------------+------------+
| s_id       | t_id       |
+------------+------------+
| 2017200001 | 2017100003 |
| 2017200002 | 2017100003 |
+------------+------------+
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
end;
SQL SUCCESS
--测试点4：父表，子表是同一个表
--4.1 事务级本地临时表
drop table if exists student;
SQL SUCCESS
start TRANSACTION;
SQL SUCCESS
create temporary table student
(
    s_id int primary key,
    s_name varchar not null,
    m_id int references student (s_id) on update cascade on delete set null
) On Commit Delete Rows;
SQL SUCCESS
insert into student values (2017200001, '张三', 2017200001);
SQL SUCCESS
insert into student values (2017200002, '李四', 2017200001);
SQL SUCCESS
insert into student values (2017200003, '王二', 2017200002);
SQL SUCCESS
select * from student;
+------------+--------+------------+
| s_id       | s_name | m_id       |
+------------+--------+------------+
| 2017200001 | 张三     | 2017200001 |
| 2017200002 | 李四     | 2017200001 |
| 2017200003 | 王二     | 2017200002 |
+------------+--------+------------+
update student set s_id = 2018200001 where s_id = 2017200001;
SQL SUCCESS
select * from student;
+------------+--------+------------+
| s_id       | s_name | m_id       |
+------------+--------+------------+
| 2017200003 | 王二     | 2017200002 |
| 2017200002 | 李四     | 2018200001 |
| 2018200001 | 张三     | 2018200001 |
+------------+--------+------------+
delete student where s_id = 2017200002;
SQL SUCCESS
select * from student;
+------------+--------+------------+
| s_id       | s_name | m_id       |
+------------+--------+------------+
| 2018200001 | 张三     | 2018200001 |
| 2017200003 | 王二     |            |
+------------+--------+------------+
drop table if exists student;
SQL SUCCESS
end;
SQL SUCCESS
--4.2 会话级本地临时表
drop table if exists student;
SQL SUCCESS
create temporary table student
(
    s_id int primary key,
    s_name varchar not null,
    m_id int references student (s_id) on update cascade on delete set null
) On Commit Preserve Rows;
SQL SUCCESS
insert into student values (2017200001, '张三', 2017200001);
SQL SUCCESS
insert into student values (2017200002, '李四', 2017200001);
SQL SUCCESS
insert into student values (2017200003, '王二', 2017200002);
SQL SUCCESS
select * from student;
+------------+--------+------------+
| s_id       | s_name | m_id       |
+------------+--------+------------+
| 2017200001 | 张三     | 2017200001 |
| 2017200002 | 李四     | 2017200001 |
| 2017200003 | 王二     | 2017200002 |
+------------+--------+------------+
update student set s_id = 2018200001 where s_id = 2017200001;
SQL SUCCESS
select * from student;
+------------+--------+------------+
| s_id       | s_name | m_id       |
+------------+--------+------------+
| 2017200003 | 王二     | 2017200002 |
| 2017200002 | 李四     | 2018200001 |
| 2018200001 | 张三     | 2018200001 |
+------------+--------+------------+
delete student where s_id = 2017200002;
SQL SUCCESS
select * from student;
+------------+--------+------------+
| s_id       | s_name | m_id       |
+------------+--------+------------+
| 2018200001 | 张三     | 2018200001 |
| 2017200003 | 王二     |            |
+------------+--------+------------+
drop table if exists student;
SQL SUCCESS
drop table if exists teacher;
SQL SUCCESS
