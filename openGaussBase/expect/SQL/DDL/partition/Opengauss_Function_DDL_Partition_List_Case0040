-- @testpoint: list分区表上以update方式创建触发器
--step1：创建list分区表,expect成功
drop table if exists t_partition_list_0040_01;
SQL SUCCESS
create table t_partition_list_0040_01(p_id int,p_name varchar)
partition by list(p_id)
(partition p1 values(10),
 partition p2 values(20),
 partition p3 values(30),
 partition p4 values(40));
SQL SUCCESS
--step2：创建普通表,expect成功
drop table if exists t_partition_list_0040_02;
SQL SUCCESS
create table t_partition_list_0040_02(p_id int,p_name varchar);
SQL SUCCESS
--step3：向list分区表中插入数据,expect成功
BEGIN
  for i in 1..3 LOOP
    insert into t_partition_list_0040_01 values(10),(20),(30),(40);
  end LOOP;
end;
/
SQL SUCCESS
--step4：向普通表中插入数据,expect成功
insert into t_partition_list_0040_02 values(10,'wang');
SQL SUCCESS
--step5：创建触发器函数,expect成功
CREATE OR REPLACE FUNCTION update_func() RETURNS TRIGGER AS
           $$
           DECLARE
           BEGIN
                   UPDATE t_partition_list_0040_02 SET p_name = 1 where p_id=10;
                   RETURN NEW;
           END
           $$ LANGUAGE PLPGSQL;
/
SQL SUCCESS
--step6：创建UPDATE触发器,expect成功
CREATE TRIGGER update_trigger
           AFTER UPDATE ON t_partition_list_0040_01
           FOR EACH ROW
           EXECUTE PROCEDURE update_func();
/
SQL SUCCESS
--step7： update数据,expect成功
UPDATE t_partition_list_0040_01 SET p_name = 'zhangsan' WHERE p_id=10;
SQL SUCCESS
--step8：查看触发器是否生效,expect成功
SELECT * FROM t_partition_list_0040_01 order by p_id asc;
+------+----------+
| p_id | p_name   |
+------+----------+
| 10   | zhangsan |
| 10   | zhangsan |
| 10   | zhangsan |
| 20   |          |
| 20   |          |
| 20   |          |
| 30   |          |
| 30   |          |
| 30   |          |
| 40   |          |
| 40   |          |
| 40   |          |
+------+----------+
SELECT * FROM t_partition_list_0040_02 order by p_id asc;
+------+--------+
| p_id | p_name |
+------+--------+
| 10   | 1      |
+------+--------+
--step9：清理环境,expect成功
drop table  t_partition_list_0040_01;
SQL SUCCESS
drop table  t_partition_list_0040_02;
SQL SUCCESS
drop FUNCTION update_func();
SQL SUCCESS
