-- @testpoint: 创建INTERVAL分区表，合理报错
DROP TABLE IF EXISTS tp1;
SQL SUCCESS
CREATE TABLE tp1
(
C_ID varchar(20) not null,
C_D_ID bigint NOT NULL,
C_W_ID tinyint  NOT NULL,
C_FIRST VARCHAR(64) NOT NULL,
C_MIDDLE CHAR(2),
C_LAST VARCHAR(64) NOT NULL,
C_STREET_1 VARCHAR(20) NOT NULL,
C_STREET_2 VARCHAR(8000),
C_CITY VARCHAR(20) NOT NULL,
C_STATE CHAR(2) NOT NULL,
C_ZIP CHAR(9) NOT NULL,
C_PHONE CHAR(16) NOT NULL,
C_SINCE TIMESTAMP,
C_CREDIT CHAR(2) NOT NULL,
C_CREDIT_LIM NUMERIC(12,2),
C_DISCOUNT NUMERIC(4,4),
C_BALANCE NUMERIC(12,2),
C_YTD_PAYMENT REAL NOT NULL,
C_PAYMENT_CNT NUMBER NOT NULL,
C_DELIVERY_CNT BOOL NOT NULL,
C_END DATE NOT NULL,
C_VCHAR VARCHAR(1000) NOT NULL,
C_DATA TEXT,
C_TEXT BLOB,
C_CLOB CLOB
)
PARTITION BY RANGE(C_END)INTERVAL(NUMTOYMINTERVAL(1,'MONTH'))
(
PARTITION PART_1 VALUES LESS THAN (TO_DATE('2018-02-01','YYYY-MM-DD')),
PARTITION PART_2 VALUES LESS THAN (TO_DATE('2018-03-01','YYYY-MM-DD')),
PARTITION PART_3 VALUES LESS THAN (TO_DATE('2018-04-01','YYYY-MM-DD')),
PARTITION PART_4 VALUES LESS THAN (TO_DATE('2018-05-01','YYYY-MM-DD')),
PARTITION PART_5 VALUES LESS THAN (TO_DATE('2018-06-01','YYYY-MM-DD')),
PARTITION PART_6 VALUES LESS THAN (TO_DATE('2018-07-01','YYYY-MM-DD')),
PARTITION PART_7 VALUES LESS THAN (TO_DATE('2018-09-01','YYYY-MM-DD')),
PARTITION PART_8 VALUES LESS THAN (TO_DATE('2018-10-01','YYYY-MM-DD')),
PARTITION PART_9 VALUES LESS THAN (TO_DATE('2018-11-01','YYYY-MM-DD'))
);
?.*ERROR: invalid input syntax for type interval
