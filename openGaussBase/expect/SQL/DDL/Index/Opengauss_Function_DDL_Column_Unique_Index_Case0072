-- @testpoint: 列存分区表结合like子句复制源表(复制约束索引)，部分step合理报错
--测试点一:创建列存范围分区表，指定主键约束，插入数据，使用like子句复制源表(不复制约束)
--step1:测试点一,创建列存范围分区表,指定主键约束   expect:成功
drop table if exists t_columns_unique_index_0072_01;
SQL SUCCESS
create table t_columns_unique_index_0072_01(id int primary key,name varchar(20)) with(orientation=column)
partition by range(id)
(partition part_1 values less than(100),
 partition part_2 values less than(200),
 partition part_3 values less than(300),
 partition part_4 values less than(400),
 partition part_5 values less than(maxvalue));
SQL SUCCESS
--step2:测试点一,插入数据   expect:成功
insert into t_columns_unique_index_0072_01 values(generate_series(1,1000),'a_'||generate_series(1,1000));
SQL SUCCESS
--step3:测试点一,查看数据   expect:成功
select count(*) from t_columns_unique_index_0072_01;
+-------+
| count |
+-------+
| 1000  |
+-------+
--step4:测试点一,使用like子句复制源表,并且复制约束   expect:成功
drop table if exists t_columns_unique_index_0072_01_copy;
SQL SUCCESS
create table t_columns_unique_index_0072_01_copy (like t_columns_unique_index_0072_01 including partition including indexes) with(orientation=column);
SQL SUCCESS
--step5:测试点一,查看子表的分区信息  expect:成功
select relname, parttype, boundaries from pg_partition where parentid = (select oid from pg_class where relname = 't_columns_unique_index_0072_01_copy') order by relname;
+-------------------------------------+----------+------------+
| relname                             | parttype | boundaries |
+-------------------------------------+----------+------------+
| part_1                              | p        | {100}      |
| part_2                              | p        | {200}      |
| part_3                              | p        | {300}      |
| part_4                              | p        | {400}      |
| part_5                              | p        | {}         |
| t_columns_unique_index_0072_01_copy | r        |            |
+-------------------------------------+----------+------------+
--step6:测试点一,将原始表数据复制到子表中   expect:成功
insert into t_columns_unique_index_0072_01_copy (select * from t_columns_unique_index_0072_01);
SQL SUCCESS
--step7:测试点一,查看子表是否有主键约束   expect:存在约束
select hasindexes from pg_tables where tablename='t_columns_unique_index_0072_01_copy';
+------------+
| hasindexes |
+------------+
| true       |
+------------+
--step8:测试点一,向复制表中插入已存在数据  expect:插入失败
insert into t_columns_unique_index_0072_01_copy values(generate_series(1,100),generate_series(1,100));
?.*ERROR: duplicate key value violates unique constraint "t_columns_unique_index_0072_01_copy_pkey".*
?.*Detail: Key \(id\)=\(1\) already exists.*
--step9:测试点一,清理环境   expect:成功
drop table t_columns_unique_index_0072_01 cascade;
SQL SUCCESS
drop table t_columns_unique_index_0072_01_copy cascade;
SQL SUCCESS
--测试点二:创建列存范围分区表，指定唯一约束，插入数据，使用like子句复制源表(复制约束)
--step1:测试点二,创建列存范围分区表,指定唯一约束   expect:成功
drop table if exists t_columns_unique_index_0072_02;
SQL SUCCESS
create table t_columns_unique_index_0072_02(id int unique,name varchar(20)) with(orientation=column)
partition by range(id)
(partition part_1 values less than(100),
 partition part_2 values less than(200),
 partition part_3 values less than(300),
 partition part_4 values less than(400),
 partition part_5 values less than(maxvalue));
SQL SUCCESS
--step2:测试点二,插入数据   expect:成功
insert into t_columns_unique_index_0072_02 values(generate_series(1,1000),'a_'||generate_series(1,1000));
SQL SUCCESS
--step3:测试点二,查看数据   expect:成功
select count(*) from t_columns_unique_index_0072_02;
+-------+
| count |
+-------+
| 1000  |
+-------+
--step4:测试点二,使用like子句复制源表,并且复制约束   expect:成功
drop table if exists t_columns_unique_index_0072_02_copy;
SQL SUCCESS
create table t_columns_unique_index_0072_02_copy (like t_columns_unique_index_0072_02 including partition including indexes) with(orientation=column);
SQL SUCCESS
--step5:测试点二,查看子表的分区信息  expect:成功
select relname, parttype, boundaries from pg_partition where parentid = (select oid from pg_class where relname = 't_columns_unique_index_0072_02_copy') order by relname;
+-------------------------------------+----------+------------+
| relname                             | parttype | boundaries |
+-------------------------------------+----------+------------+
| part_1                              | p        | {100}      |
| part_2                              | p        | {200}      |
| part_3                              | p        | {300}      |
| part_4                              | p        | {400}      |
| part_5                              | p        | {}         |
| t_columns_unique_index_0072_02_copy | r        |            |
+-------------------------------------+----------+------------+
--step6:测试点二,将原始表数据复制到子表中   expect:成功
insert into t_columns_unique_index_0072_02_copy (select * from t_columns_unique_index_0072_02);
SQL SUCCESS
--step7:测试点二,查看子表是否有唯一约束   expect:存在约束
select hasindexes from pg_tables where tablename='t_columns_unique_index_0072_02_copy';
+------------+
| hasindexes |
+------------+
| true       |
+------------+
--step8:测试点二,向复制表中插入已存在数据  expect:插入失败
insert into t_columns_unique_index_0072_02_copy values(generate_series(1,100),generate_series(1,100));
?.*ERROR: duplicate key value violates unique constraint "t_columns_unique_index_0072_02_copy_id_key".*
?.*Detail: Key \(id\)=\(1\) already exists.*
--step9:测试点二,清理环境   expect:成功
drop table t_columns_unique_index_0072_02 cascade;
SQL SUCCESS
drop table t_columns_unique_index_0072_02_copy cascade;
SQL SUCCESS
--测试点三:创建列存范围分区表，创建索引，使用like子句复制源表(复制索引)
--step1:测试点三,创建列存普通表   expect:成功
drop table if exists t_columns_unique_index_0072_03;
SQL SUCCESS
create table t_columns_unique_index_0072_03(id int unique,name varchar(20)) with(orientation=column)
partition by range(id)
(partition part_1 values less than(100),
 partition part_2 values less than(200),
 partition part_3 values less than(300),
 partition part_4 values less than(400),
 partition part_5 values less than(maxvalue));
SQL SUCCESS
--step2:测试点三,创建唯一索引   expect:成功
create unique index i_columns_unique_index_0072_01 on t_columns_unique_index_0072_03 using btree(id) local;
SQL SUCCESS
--step3:测试点三,插入数据   expect:成功
insert into t_columns_unique_index_0072_03 values (generate_series(1,100),generate_series(1,100));
SQL SUCCESS
--step4:测试点三,使用like子句复制源表,并且复制索引   expect:成功
drop table if exists t_columns_unique_index_0072_03_copy;
SQL SUCCESS
create table t_columns_unique_index_0072_03_copy (like t_columns_unique_index_0072_03 including partition including indexes) with(orientation=column);
SQL SUCCESS
--step5:测试点三,查看子表的分区信息  expect:成功
select relname, parttype, boundaries from pg_partition where parentid = (select oid from pg_class where relname = 't_columns_unique_index_0072_03_copy') order by relname;
+-------------------------------------+----------+------------+
| relname                             | parttype | boundaries |
+-------------------------------------+----------+------------+
| part_1                              | p        | {100}      |
| part_2                              | p        | {200}      |
| part_3                              | p        | {300}      |
| part_4                              | p        | {400}      |
| part_5                              | p        | {}         |
| t_columns_unique_index_0072_03_copy | r        |            |
+-------------------------------------+----------+------------+
--step6:测试点三,将原始表数据复制到子表中   expect:成功
insert into t_columns_unique_index_0072_03_copy (select * from t_columns_unique_index_0072_03);
SQL SUCCESS
--step7:测试点三,查看子表是否有主键or唯一约束   expect:存在索引
select hasindexes from pg_tables where tablename='t_columns_unique_index_0072_03_copy';
+------------+
| hasindexes |
+------------+
| true       |
+------------+
--step8:测试点三,向复制表中插入已存在数据  expect:插入失败
insert into t_columns_unique_index_0072_03_copy values(generate_series(1,100),generate_series(1,100));
?.*ERROR: duplicate key value violates unique constraint "t_columns_unique_index_0072_03_copy_id_key".*
?.*Detail: Key \(id\)=\(1\) already exists.*
--step9:测试点三,清理环境   expect:成功
drop table t_columns_unique_index_0072_03 cascade;
SQL SUCCESS
drop table t_columns_unique_index_0072_03_copy cascade;
SQL SUCCESS
