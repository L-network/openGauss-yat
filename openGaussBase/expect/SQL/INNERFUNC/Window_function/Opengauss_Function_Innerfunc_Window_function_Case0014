-- @testpoint: 窗口函数列存表支持情况
--创建列存表
create table goods_sale_table ( goods_id int, goods_type varchar ( 1000 ), goods_sale int )  WITH (ORIENTATION = COLUMN);
SQL SUCCESS
insert into goods_sale_table
values
	( 1, '电脑数码', 400 ),
	( 2, '家用电器', 600 ),
	( 3, '电脑数码', 500 ),
	( 4, '游戏', 550 ),
	( 5, '家用电器', 1000 ),
	( 6, '电脑数码', 1200 ),
	( 7, '游戏', 700 ),
	( 8, '游戏', 750 ),
	( 9, '家用电器', 1100 ),
	( 10, '电脑数码', 900 ),
	( 11, '电脑数码', 900 );
SQL SUCCESS
--列存表对不同函数的支持情况
--窗口函数 row_number ()支持
select goods_id, goods_type, row_number ( ) over ( partition by goods_type order by goods_sale desc ) from goods_sale_table;
+----------+------------+------------+
| goods_id | goods_type | row_number |
+----------+------------+------------+
| 9        | 家用电器       | 1          |
| 5        | 家用电器       | 2          |
| 2        | 家用电器       | 3          |
| 8        | 游戏         | 1          |
| 7        | 游戏         | 2          |
| 4        | 游戏         | 3          |
| 6        | 电脑数码       | 1          |
| 11       | 电脑数码       | 2          |
| 10       | 电脑数码       | 3          |
| 3        | 电脑数码       | 4          |
| 1        | 电脑数码       | 5          |
+----------+------------+------------+
--窗口函数 rank()，支持
select goods_id, goods_type, rank ( ) over ( partition by goods_type order by goods_sale desc ) from goods_sale_table;
+----------+------------+------+
| goods_id | goods_type | rank |
+----------+------------+------+
| 9        | 家用电器       | 1    |
| 5        | 家用电器       | 2    |
| 2        | 家用电器       | 3    |
| 8        | 游戏         | 1    |
| 7        | 游戏         | 2    |
| 4        | 游戏         | 3    |
| 6        | 电脑数码       | 1    |
| 11       | 电脑数码       | 2    |
| 10       | 电脑数码       | 2    |
| 3        | 电脑数码       | 4    |
| 1        | 电脑数码       | 5    |
+----------+------------+------+
--窗口函数 DENSE_RANK()
select goods_id, goods_type, DENSE_RANK ( ) over ( partition by goods_type order by goods_sale desc ) from goods_sale_table;
+----------+------------+------------+
| goods_id | goods_type | dense_rank |
+----------+------------+------------+
| 9        | 家用电器       | 1          |
| 5        | 家用电器       | 2          |
| 2        | 家用电器       | 3          |
| 8        | 游戏         | 1          |
| 7        | 游戏         | 2          |
| 4        | 游戏         | 3          |
| 6        | 电脑数码       | 1          |
| 11       | 电脑数码       | 2          |
| 10       | 电脑数码       | 2          |
| 3        | 电脑数码       | 3          |
| 1        | 电脑数码       | 4          |
+----------+------------+------------+
--窗口函数CUME_DIST()
select goods_id, goods_type, cume_dist ( ) over ( partition by goods_type order by goods_sale desc ) from goods_sale_table;
+----------+------------+--------------------+
| goods_id | goods_type | cume_dist          |
+----------+------------+--------------------+
| 9        | 家用电器       | 0.3333333333333333 |
| 5        | 家用电器       | 0.6666666666666666 |
| 2        | 家用电器       | 1.0                |
| 8        | 游戏         | 0.3333333333333333 |
| 7        | 游戏         | 0.6666666666666666 |
| 4        | 游戏         | 1.0                |
| 6        | 电脑数码       | 0.2                |
| 11       | 电脑数码       | 0.6                |
| 10       | 电脑数码       | 0.6                |
| 3        | 电脑数码       | 0.8                |
| 1        | 电脑数码       | 1.0                |
+----------+------------+--------------------+
--窗口函数percent_rank( )，支持
select goods_id, goods_type, percent_rank ( ) over ( partition by goods_type order by goods_sale desc ) from goods_sale_table;
+----------+------------+--------------+
| goods_id | goods_type | percent_rank |
+----------+------------+--------------+
| 9        | 家用电器       | 0.0          |
| 5        | 家用电器       | 0.5          |
| 2        | 家用电器       | 1.0          |
| 8        | 游戏         | 0.0          |
| 7        | 游戏         | 0.5          |
| 4        | 游戏         | 1.0          |
| 6        | 电脑数码       | 0.0          |
| 11       | 电脑数码       | 0.25         |
| 10       | 电脑数码       | 0.25         |
| 3        | 电脑数码       | 0.75         |
| 1        | 电脑数码       | 1.0          |
+----------+------------+--------------+
--窗口函数NTILE(num_buckets integer)，支持
select goods_id, goods_type, NTILE(3) over ( partition by goods_type order by goods_sale desc ) from goods_sale_table;
+----------+------------+-------+
| goods_id | goods_type | ntile |
+----------+------------+-------+
| 9        | 家用电器       | 1     |
| 5        | 家用电器       | 2     |
| 2        | 家用电器       | 3     |
| 8        | 游戏         | 1     |
| 7        | 游戏         | 2     |
| 4        | 游戏         | 3     |
| 6        | 电脑数码       | 1     |
| 11       | 电脑数码       | 1     |
| 10       | 电脑数码       | 2     |
| 3        | 电脑数码       | 2     |
| 1        | 电脑数码       | 3     |
+----------+------------+-------+
--窗口函数LAG(value any [, offset integer [, default any ]])
select goods_id, goods_type, lag (goods_id,2) over ( partition by goods_type order by goods_type desc ) from goods_sale_table;
+----------+------------+-----+
| goods_id | goods_type | lag |
+----------+------------+-----+
| 11       | 电脑数码       |     |
| 3        | 电脑数码       |     |
| 6        | 电脑数码       | 11  |
| 10       | 电脑数码       | 3   |
| 1        | 电脑数码       | 6   |
| 7        | 游戏         |     |
| 8        | 游戏         |     |
| 4        | 游戏         | 7   |
| 9        | 家用电器       |     |
| 2        | 家用电器       |     |
| 5        | 家用电器       | 9   |
+----------+------------+-----+
--窗口函数LEAD(value any [, offset integer [, default any ]])
select goods_id, goods_type, lead(goods_id,2) over ( partition by goods_type order by goods_type desc ) from goods_sale_table;
+----------+------------+------+
| goods_id | goods_type | lead |
+----------+------------+------+
| 11       | 电脑数码       | 6    |
| 3        | 电脑数码       | 10   |
| 6        | 电脑数码       | 1    |
| 10       | 电脑数码       |      |
| 1        | 电脑数码       |      |
| 7        | 游戏         | 4    |
| 8        | 游戏         |      |
| 4        | 游戏         |      |
| 9        | 家用电器       | 5    |
| 2        | 家用电器       |      |
| 5        | 家用电器       |      |
+----------+------------+------+
--窗口函数FIRST_VALUE(value any)
select goods_id, goods_type, first_value(goods_sale) over ( partition by goods_type order by goods_type desc ) from goods_sale_table;
+----------+------------+-------------+
| goods_id | goods_type | first_value |
+----------+------------+-------------+
| 11       | 电脑数码       | 900         |
| 3        | 电脑数码       | 900         |
| 6        | 电脑数码       | 900         |
| 10       | 电脑数码       | 900         |
| 1        | 电脑数码       | 900         |
| 7        | 游戏         | 700         |
| 8        | 游戏         | 700         |
| 4        | 游戏         | 700         |
| 9        | 家用电器       | 1100        |
| 2        | 家用电器       | 1100        |
| 5        | 家用电器       | 1100        |
+----------+------------+-------------+
--窗口函数LAST_VALUE(value any)
select goods_id, goods_type, first_value(3) over ( partition by goods_type order by goods_type desc ) from goods_sale_table;
+----------+------------+-------------+
| goods_id | goods_type | first_value |
+----------+------------+-------------+
| 11       | 电脑数码       | 3           |
| 3        | 电脑数码       | 3           |
| 6        | 电脑数码       | 3           |
| 10       | 电脑数码       | 3           |
| 1        | 电脑数码       | 3           |
| 7        | 游戏         | 3           |
| 8        | 游戏         | 3           |
| 4        | 游戏         | 3           |
| 9        | 家用电器       | 3           |
| 2        | 家用电器       | 3           |
| 5        | 家用电器       | 3           |
+----------+------------+-------------+
--窗口函数NTH_VALUE(value any, nth integer)
select goods_id, goods_type, nth_value(goods_id,1) over ( partition by goods_type order by goods_sale desc ) from goods_sale_table;
+----------+------------+-----------+
| goods_id | goods_type | nth_value |
+----------+------------+-----------+
| 9        | 家用电器       | 9         |
| 5        | 家用电器       | 9         |
| 2        | 家用电器       | 9         |
| 8        | 游戏         | 8         |
| 7        | 游戏         | 8         |
| 4        | 游戏         | 8         |
| 6        | 电脑数码       | 6         |
| 11       | 电脑数码       | 6         |
| 10       | 电脑数码       | 6         |
| 3        | 电脑数码       | 6         |
| 1        | 电脑数码       | 6         |
+----------+------------+-----------+
--清理环境
drop  table goods_sale_table;
SQL SUCCESS