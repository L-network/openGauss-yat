-- @testpoint: 创建触发器,触发器名长度大于63个字符，超出部分自动截取
-- @modified at: 2020-12-16
----创建源表和触发表
DROP TABLE IF EXISTS test_trigger_src_tbl0;
SQL SUCCESS
DROP TABLE IF EXISTS test_trigger_des_tbl0;
SQL SUCCESS
CREATE TABLE test_trigger_src_tbl0(id1 INT, id2 INT, id3 INT);
SQL SUCCESS
CREATE TABLE test_trigger_des_tbl0(id1 INT, id2 INT, id3 INT);
SQL SUCCESS
----创建触发器函数
CREATE OR REPLACE FUNCTION tri_insert_func01() RETURNS TRIGGER AS
$$
DECLARE
BEGIN
	INSERT INTO test_trigger_des_tbl0 VALUES(NEW.id1, NEW.id2, NEW.id3);
	RETURN NEW;
END
$$ LANGUAGE PLPGSQL;
/
SQL SUCCESS
----创建触发器
CREATE TRIGGER insert_trigger01_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabc BEFORE INSERT ON test_trigger_src_tbl0 FOR EACH ROW EXECUTE PROCEDURE tri_insert_func01();
/
SQL SUCCESS
----查看触发器名称
select tgname from pg_trigger;
+-----------------------------------------------------------------+
| tgname                                                          |
+-----------------------------------------------------------------+
| insert_trigger01_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa |
+-----------------------------------------------------------------+
select char_length(tgname) from pg_trigger;
+-------------+
| char_length |
+-------------+
| 63          |
+-------------+
----清理资源
DROP TRIGGER insert_trigger01_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabc ON test_trigger_src_tbl0;
SQL SUCCESS
DROP FUNCTION tri_insert_func01();
SQL SUCCESS
DROP TABLE test_trigger_src_tbl0;
SQL SUCCESS
DROP TABLE test_trigger_des_tbl0;
SQL SUCCESS
