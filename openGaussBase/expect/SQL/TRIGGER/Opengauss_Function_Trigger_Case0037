-- @testpoint: 创建INSTEAD OF触发器，不与WHEN条件同时使用
-- @modified at: 2020-12-18
--创建源视图和触发表
DROP TABLE IF EXISTS test_trigger_src_tbl;
SQL SUCCESS
DROP VIEW IF EXISTS test_trigger_src_view;
SQL SUCCESS
CREATE TABLE test_trigger_src_tbl(id1 INT, id2 INT, id3 INT);
SQL SUCCESS
CREATE VIEW test_trigger_src_view AS SELECT * FROM test_trigger_src_tbl WHERE id1<10;
SQL SUCCESS
--创建触发器函数
CREATE OR REPLACE FUNCTION tri_insert_func01() RETURNS TRIGGER AS
$$
DECLARE
BEGIN
    INSERT INTO test_trigger_src_tbl VALUES(NEW.id1, NEW.id2, NEW.id3);
	RETURN NEW;
END
$$ LANGUAGE PLPGSQL;
/
SQL SUCCESS
--创建触发器
CREATE TRIGGER insert_trigger01 INSTEAD OF INSERT ON test_trigger_src_view FOR EACH ROW EXECUTE PROCEDURE tri_insert_func01();
/
SQL SUCCESS
--执行INSERT触发事件
INSERT INTO test_trigger_src_view VALUES(1,2,3);
SQL SUCCESS
INSERT INTO test_trigger_src_view VALUES(5,6,7);
SQL SUCCESS
INSERT INTO test_trigger_src_view VALUES(11,22,33);
SQL SUCCESS
INSERT INTO test_trigger_src_view VALUES(55,66,77);
SQL SUCCESS
--检查触发结果
SELECT * FROM test_trigger_src_tbl;
+-----+-----+-----+
| id1 | id2 | id3 |
+-----+-----+-----+
| 1   | 2   | 3   |
| 5   | 6   | 7   |
| 11  | 22  | 33  |
| 55  | 66  | 77  |
+-----+-----+-----+
SELECT * FROM test_trigger_src_view;
+-----+-----+-----+
| id1 | id2 | id3 |
+-----+-----+-----+
| 1   | 2   | 3   |
| 5   | 6   | 7   |
+-----+-----+-----+
--DROP TRIGGER
DROP TRIGGER insert_trigger01 ON test_trigger_src_view;
SQL SUCCESS
DROP FUNCTION tri_insert_func01() cascade;
SQL SUCCESS
DROP VIEW test_trigger_src_view;
SQL SUCCESS
DROP TABLE test_trigger_src_tbl;
SQL SUCCESS
