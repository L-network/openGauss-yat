-- @testpoint: range_range二级分区表：create if not exists不同名/不同schema
--test1: 不同名
--step1: 创建普通表; expect:成功
drop table if exists  t_subpartition_0259;
SQL SUCCESS
create   table if not exists t_subpartition_0259
(
    col_1 int  ,
    col_2 int  not null ,
	col_3 varchar2 ( 30 ) not null ,
    col_4 int  generated always as(2*col_2) stored  ,
	check (col_4 >= col_2)
);
SQL SUCCESS
--step2: 创建不同名二级分区表; expect:成功
drop table if exists  t_subpartition_0259_01;
SQL SUCCESS
create   table if not exists t_subpartition_0259
(
    col_1 int  ,
    col_2 int  not null ,
	col_3 int not null ,
    col_4 int  generated always as(2*col_2) stored  ,
	check (col_4 >= col_2)
)
with(fillfactor=80)
partition by range (col_1) subpartition by range (col_2)
(
  partition p_range_1 values less than( 10 )
  (
    subpartition p_range_1_1 values less than( 5 ),
    subpartition p_range_1_2 values less than( maxvalue )
  ),
  partition p_range_2 values less than( 20 )
  (
    subpartition p_range_2_1 values less than( 5 ),
    subpartition p_range_2_2 values less than( 10 )
  )
) enable row movement;
SQL SUCCESS
--test2: 不同schema
--step3: 创建新schema; expect:成功
drop schema if exists s_subpartition_0259 cascade;
SQL SUCCESS
create schema s_subpartition_0259;
SQL SUCCESS
--step4: 创建和普通表同名不同schema二级分区表; expect:成功
create   table if not exists s_subpartition_0259.t_subpartition_0259
(
    col_1 int  ,
    col_2 int  not null ,
	col_3 int not null ,
    col_4 int  generated always as(2*col_2) stored  ,
	check (col_4 >= col_2)
)
with(fillfactor=80)
partition by range (col_1) subpartition by range (col_2)
(
  partition p_range_1 values less than( 10 )
  (
    subpartition p_range_1_1 values less than( 5 ),
    subpartition p_range_1_2 values less than( maxvalue )
  ),
  partition p_range_2 values less than( 20 )
  (
    subpartition p_range_2_1 values less than( 5 ),
    subpartition p_range_2_2 values less than( 10 )
  )
) enable row movement;
SQL SUCCESS
--step5: 创建和二级分区表同名不同schema二级分区表; expect:成功
create   table if not exists s_subpartition_0259.t_subpartition_0259
(
    col_1 int  ,
    col_2 int  not null ,
	col_3 int not null ,
    col_4 int  generated always as(2*col_2) stored  ,
	check (col_4 >= col_2)
)
with(fillfactor=80)
partition by range (col_1) subpartition by range (col_2)
(
  partition p_range_1 values less than( 10 )
  (
    subpartition p_range_1_1 values less than( 5 ),
    subpartition p_range_1_2 values less than( maxvalue )
  ),
  partition p_range_2 values less than( 20 )
  (
    subpartition p_range_2_1 values less than( 5 ),
    subpartition p_range_2_2 values less than( 10 )
  )
) enable row movement;
SQL SUCCESS
--step6: 创建二级分区表; expect:成功
create   table if not exists t_subpartition_0259
(
    col_1 int  ,
    col_2 int  not null ,
	col_3 int not null ,
    col_4 int  generated always as(2*col_2) stored  ,
	check (col_4 >= col_2)
)
with(fillfactor=80)
partition by range (col_1) subpartition by range (col_2)
(
  partition p_range_1 values less than( 10 )
  (
    subpartition p_range_1_1 values less than( 5 ),
    subpartition p_range_1_2 values less than( maxvalue )
  ),
  partition p_range_2 values less than( 20 )
  (
    subpartition p_range_2_1 values less than( 5 ),
    subpartition p_range_2_2 values less than( 10 )
  )
) enable row movement;
SQL SUCCESS
--step7: 清理环境; expect:成功
drop table if exists t_subpartition_0259;
SQL SUCCESS
drop table if exists t_subpartition_0259_01;
SQL SUCCESS
drop schema if exists s_subpartition_0259 cascade;
SQL SUCCESS
