-- @testpoint: list_hash二级分区表：自治事务/匿名块
--step1: 创建表空间; expect:成功
drop table if exists t_subpartition_0183;
SQL SUCCESS
drop tablespace if exists ts_subpartition_0183;
SQL SUCCESS
create tablespace ts_subpartition_0183 relative location 'subpartition_tablespace/subpartition_tablespace_0183';
SQL SUCCESS
--test1: 自治事务
--step2: 创建二级分区表; expect:成功
create table t_subpartition_0183
(
    col_1 int ,
    col_2 int ,
    col_3 varchar2 ( 30 ) ,
    col_4 int
)
tablespace ts_subpartition_0183
partition by list (col_1) subpartition by hash (col_2)
(
  partition p_list_1 values (-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
  (
    subpartition p_hash_1_1 ,
    subpartition p_hash_1_2 ,
    subpartition p_hash_1_3 
  ),
  partition p_list_2 values (1,2,3,4,5,6,7,8,9,10 )
  (
    subpartition p_hash_2_1 ,
    subpartition p_hash_2_2 ,
    subpartition p_hash_2_3 ,
    subpartition p_hash_2_4 ,
    subpartition p_hash_2_5 
  ),
  partition p_list_3 values (11,12,13,14,15,16,17,18,19,20),
  partition p_list_4 values (21,22,23,24,25,26,27,28,29,30 )
  (
    subpartition p_hash_4_1 
  ),
  partition p_list_5 values (default)
  (
    subpartition p_hash_5_1 
  ),
  partition p_list_6 values (31,32,33,34,35,36,37,38,39,40)
  (
    subpartition p_hash_6_1 ,
    subpartition p_hash_6_2 ,
    subpartition p_hash_6_3 
  )
) enable row movement ;
SQL SUCCESS
--step3: 插入数据; expect:成功
insert into t_subpartition_0183 values(1,2);
SQL SUCCESS
--step4: 查询数据; expect:成功
select * from t_subpartition_0183;
+-------+-------+-------+-------+
| col_1 | col_2 | col_3 | col_4 |
+-------+-------+-------+-------+
| 1     | 2     |       |       |
+-------+-------+-------+-------+
--step5: 创建包含自治事务的存储过程; expect:成功
drop function if exists p_subpartition_0183_01();
SQL SUCCESS
create or replace procedure p_subpartition_0183_01(a int, b int) as
declare
num3 int := a;
num4 int := b;
pragma autonomous_transaction;
begin
insert into t_subpartition_0183 values(num3, num4);
end;
/
SQL SUCCESS
--step6: 创建调用自治事务存储过程的普通存储过程; expect:成功
drop function if exists p_subpartition_0183_02();
SQL SUCCESS
create or replace procedure p_subpartition_0183_02(a int, b int) as
declare
begin
insert into t_subpartition_0183 values(66, 66);
p_subpartition_0183_01(a,b);
rollback;
end;
/
SQL SUCCESS
--step7: 调用普通存储过程; expect:成功
select p_subpartition_0183_02(11,22);
+------------------------+
| p_subpartition_0183_02 |
+------------------------+
|                        |
+------------------------+
--step8: 查看表结果; expect:成功,2条数据
select * from t_subpartition_0183 order by col_1;
+-------+-------+-------+-------+
| col_1 | col_2 | col_3 | col_4 |
+-------+-------+-------+-------+
| 1     | 2     |       |       |
| 11    | 22    |       |       |
+-------+-------+-------+-------+
--step9: 删除函数; expect:成功
drop function if exists p_subpartition_0183_01();
SQL SUCCESS
drop function if exists p_subpartition_0183_02();
SQL SUCCESS
--test2: 匿名块
--step10: 创建匿名块; expect:成功
start transaction;
SQL SUCCESS
declare
pragma autonomous_transaction;
begin
insert into t_subpartition_0183 values(1,2,'you are so cute,will commit!');
end;
/
SQL SUCCESS
--step11: 插入数据; expect:成功
insert into t_subpartition_0183 values(1,4,'you will rollback!');
SQL SUCCESS
--step12: 回滚当前事务并取消当前事务中的所有更新; expect:成功
rollback;
SQL SUCCESS
--step13: 查询数据; expect:成功,3条数据
select * from t_subpartition_0183;
+-------+-------+------------------------------+-------+
| col_1 | col_2 | col_3                        | col_4 |
+-------+-------+------------------------------+-------+
| 11    | 22    |                              |       |
| 1     | 2     |                              |       |
| 1     | 2     | you are so cute,will commit! |       |
+-------+-------+------------------------------+-------+
--test3: 函数
--step14: 创建函数; expect:成功
drop function if exists f_subpartition_0183_01();
SQL SUCCESS
create or replace function f_subpartition_0183_01(a int ,b int ,c text) return int as
declare
pragma autonomous_transaction;
begin
insert into t_subpartition_0183 values(a, b, c);
return 1;
end;
/
SQL SUCCESS
--step15: 创建函数; expect:成功
drop function if exists f_subpartition_0183_02();
SQL SUCCESS
create or replace function f_subpartition_0183_02(num1 int) return int as
declare
num3 int := 22;
tmp int;
pragma autonomous_transaction;
begin
num3 := num3/num1;
return num3;
exception
when division_by_zero then
select f_subpartition_0183_01(num3, num1, sqlerrm) into tmp;
return 0;
end;
/
SQL SUCCESS
--step16: 调用函数; expect:成功
select f_subpartition_0183_02(0);
+------------------------+
| f_subpartition_0183_02 |
+------------------------+
| 0                      |
+------------------------+
--step17: 查询数据; expect:成功,4条数据
select * from t_subpartition_0183;
+-------+-------+------------------------------+-------+
| col_1 | col_2 | col_3                        | col_4 |
+-------+-------+------------------------------+-------+
| 22    | 0     | division by zero             |       |
| 11    | 22    |                              |       |
| 1     | 2     |                              |       |
| 1     | 2     | you are so cute,will commit! |       |
+-------+-------+------------------------------+-------+
--step18: 删除函数; expect:成功,4条数据
drop function if exists f_subpartition_0183_01();
SQL SUCCESS
drop function if exists f_subpartition_0183_02();
SQL SUCCESS
--step19: 清理环境; expect:成功
drop table if exists t_subpartition_0183_01;
SQL SUCCESS
drop table if exists t_subpartition_0183;
SQL SUCCESS
drop tablespace if exists ts_subpartition_0183;
SQL SUCCESS
