-- @testpoint: list_hash二级分区表列约束：default/unique,部分测试点合理报错
--test1: 列约束-- default default_expr
--step1: 创建二级分区表,二级分区键包含列约束default; expect:成功
drop table if exists t_subpartition_0139;
SQL SUCCESS
create  table if not exists t_subpartition_0139
(
  col_1 int ,
  col_2 int default 20 ,
    col_3 int ,
  col_4 int
)
partition by list (col_1) subpartition by hash (col_2)
(
 partition p_list_1 values (-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
 (
  subpartition p_hash_1_1 ,
  subpartition p_hash_1_2 ,
  subpartition p_hash_1_3
 ),
 partition p_list_2 values (1,2,3,4,5,6,7,8,9,10 )
 (
  subpartition p_hash_2_1 ,
  subpartition p_hash_2_2 ,
  subpartition p_hash_2_3 ,
  subpartition p_hash_2_4 ,
  subpartition p_hash_2_5
 ),
 partition p_list_3 values (11,12,13,14,15,16,17,18,19,20),
 partition p_list_4 values (21,22,23,24,25,26,27,28,29,30 )
 (
  subpartition p_hash_4_1
 ),
 partition p_list_5 values (default)
 (
  subpartition p_hash_5_1
 ),
 partition p_list_6 values (31,32,33,34,35,36,37,38,39,40)
 (
  subpartition p_hash_6_1 ,
  subpartition p_hash_6_2 ,
  subpartition p_hash_6_3
 )
) enable row movement ;
SQL SUCCESS
--step2: 插入数据; expect:成功
insert into t_subpartition_0139(col_1,col_3,col_4) values(1,1,1),(5,5,5);
SQL SUCCESS
--step3: 查询数据; expect:成功，2条数据
select * from t_subpartition_0139;
+-------+-------+-------+-------+
| col_1 | col_2 | col_3 | col_4 |
+-------+-------+-------+-------+
| 1     | 20    | 1     | 1     |
| 5     | 20    | 5     | 5     |
+-------+-------+-------+-------+
--step4: 查询一级分区数据; expect:成功，2条数据
select * from t_subpartition_0139 partition(p_list_2);
+-------+-------+-------+-------+
| col_1 | col_2 | col_3 | col_4 |
+-------+-------+-------+-------+
| 1     | 20    | 1     | 1     |
| 5     | 20    | 5     | 5     |
+-------+-------+-------+-------+
--step5: 插入数据; expect:成功
insert into t_subpartition_0139(col_3,col_4) values(1,1),(5,5);
SQL SUCCESS
--step6: 查询二级分区数据; expect:成功，2条数据
select * from t_subpartition_0139 subpartition(p_hash_5_1);
+-------+-------+-------+-------+
| col_1 | col_2 | col_3 | col_4 |
+-------+-------+-------+-------+
|       | 20    | 1     | 1     |
|       | 20    | 5     | 5     |
+-------+-------+-------+-------+
--test2: 列约束--unique index_parameters
--step7: 创建二级分区表，一级分区键和二级分区键包含列约束unique index_parameters; expect:成功
drop table if exists t_subpartition_0139;
SQL SUCCESS
create  table if not exists t_subpartition_0139
(
  col_1 int unique,
  col_2 int unique,
    col_3 int ,
  col_4 int
)
partition by list (col_1) subpartition by hash (col_2)
(
 partition p_list_1 values (-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
 (
  subpartition p_hash_1_1 ,
  subpartition p_hash_1_2 ,
  subpartition p_hash_1_3
 ),
 partition p_list_2 values (1,2,3,4,5,6,7,8,9,10 )
 (
  subpartition p_hash_2_1 ,
  subpartition p_hash_2_2 ,
  subpartition p_hash_2_3 ,
  subpartition p_hash_2_4 ,
  subpartition p_hash_2_5
 ),
 partition p_list_3 values (11,12,13,14,15,16,17,18,19,20),
 partition p_list_4 values (21,22,23,24,25,26,27,28,29,30 )
 (
  subpartition p_hash_4_1
 ),
 partition p_list_5 values (default)
 (
  subpartition p_hash_5_1
 ),
 partition p_list_6 values (31,32,33,34,35,36,37,38,39,40)
 (
  subpartition p_hash_6_1 ,
  subpartition p_hash_6_2 ,
  subpartition p_hash_6_3
 )
) enable row movement ;
SQL SUCCESS
--step8: 插入数据; expect:成功
insert into t_subpartition_0139 values(1,1,1,1),(5,5,5,5);
SQL SUCCESS
--step9: 插入col_1，col_2重复数据; expect:合理报错
insert into t_subpartition_0139 values(1,1,1,1),(5,5,5,5);
?.*ERROR: duplicate key value violates unique constraint "t_subpartition_0139_col_1_tableoid_key.*
  Detail: Key (col_1)=(1) already exists.
--step10: 插入col_1重复数据; expect:合理报错
insert into t_subpartition_0139 values(1,2,1,1);
?.*ERROR: duplicate key value violates unique constraint "t_subpartition_0139_col_1_tableoid_key.*
  Detail: Key (col_1)=(1) already exists.
--step11: 插入col_2重复数据; expect:合理报错
insert into t_subpartition_0139 values(2,1,1,1);
?.*ERROR: duplicate key value violates unique constraint "t_subpartition_0139_col_2_tableoid_key.*
  Detail: Key (col_2)=(1) already exists.
--step12: 清理环境; expect:成功
drop table if exists t_subpartition_0139;
SQL SUCCESS
