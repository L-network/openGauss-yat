-- @testpoint: list_list二级分区表：analyze/vacuum,部分测试点合理报错
--step1: 创建表空间; expect:成功
drop table if exists t_subpartition_0070;
SQL SUCCESS
drop tablespace if exists ts_subpartition_0070;
SQL SUCCESS
create tablespace ts_subpartition_0070 relative location 'subpartition_tablespace/subpartition_tablespace_0070';
SQL SUCCESS
--test1: analyze收集分区表的统计信息
--step2: 创建二级分区表; expect:成功
create table t_subpartition_0070
(
    col_1 int ,
    col_2 int ,
    col_3 varchar2 ( 30 ) ,
    col_4 int
)
partition by list (col_1) subpartition by list (col_2)
(
  partition p_list_1 values(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
  (
    subpartition p_list_1_1 values ( 0,-1,-2,-3,-4,-5,-6,-7,-8,-9 ),
    subpartition p_list_1_2 values ( default )
  ),
  partition p_list_2 values(0,1,2,3,4,5,6,7,8,9)
  (
    subpartition p_list_2_1 values ( 0,1,2,3,4,5,6,7,8,9 ),
    subpartition p_list_2_2 values ( default ),
    subpartition p_list_2_3 values ( 10,11,12,13,14,15,16,17,18,19),
    subpartition p_list_2_4 values ( 20,21,22,23,24,25,26,27,28,29 ),
    subpartition p_list_2_5 values ( 30,31,32,33,34,35,36,37,38,39 )
  ),
  partition p_list_3 values(10,11,12,13,14,15,16,17,18,19)
  (
    subpartition p_list_3_2 values ( default )
  ),
  partition p_list_4 values(default ),
  partition p_list_5 values(20,21,22,23,24,25,26,27,28,29)
  (
    subpartition p_list_5_1 values ( 0,1,2,3,4,5,6,7,8,9 ),
    subpartition p_list_5_2 values ( default ),
    subpartition p_list_5_3 values ( 10,11,12,13,14,15,16,17,18,19),
    subpartition p_list_5_4 values ( 20,21,22,23,24,25,26,27,28,29 ),
    subpartition p_list_5_5 values ( 30,31,32,33,34,35,36,37,38,39 )
  ),
  partition p_list_6 values(30,31,32,33,34,35,36,37,38,39),
  partition p_list_7 values(40,41,42,43,44,45,46,47,48,49)
  (
    subpartition p_list_7_1 values ( default )
  )
) enable row movement;
SQL SUCCESS
--step3: 插入数据; expect:成功
insert into  t_subpartition_0070 values (generate_series(0, 19),generate_series(0, 1000),generate_series(0, 99));
SQL SUCCESS
--step4: 收集指定分区的统计信息; expect:成功,只支持语法,不收集统计信息
analyze t_subpartition_0070 partition(p_list_6);
SQL SUCCESS
select pg_sleep(2);
+----------+
| pg_sleep |
+----------+
|          |
+----------+
--step5: 查询pg_statistic数据; expect:成功,0条数据
select starelkind,stainherit from pg_statistic where starelid=(select oid from pg_class where relname='t_subpartition_0070');
+------------+------------+
| starelkind | stainherit |
+------------+------------+
+------------+------------+
--step6: 查询pg_stats数据; expect:成功,0条数据
select tablename,attname from pg_stats  where tablename='t_subpartition_0070';
+-----------+---------+
| tablename | attname |
+-----------+---------+
+-----------+---------+
--test2:  analyze--收集多列统计信息(包含分区列)
--step7: 收集2个分区列统计信息; expect:成功
analyze t_subpartition_0070 (col_1,col_2);
SQL SUCCESS
select pg_sleep(2);
+----------+
| pg_sleep |
+----------+
|          |
+----------+
--step8: 查询pg_statistic数据; expect:成功,2条数据
select starelkind,stainherit from pg_statistic where starelid=(select oid from pg_class where relname='t_subpartition_0070');
+------------+------------+
| starelkind | stainherit |
+------------+------------+
| c          | false      |
| c          | false      |
+------------+------------+
--step9: 查询pg_stats数据; expect:成功,2条数据
select tablename,attname from pg_stats  where tablename='t_subpartition_0070';
+---------------------+---------+
| tablename           | attname |
+---------------------+---------+
| t_subpartition_0070 | col_1   |
| t_subpartition_0070 | col_2   |
+---------------------+---------+
--step10: 查询pg_stat_all_tables数据; expect:成功,显示analyze的次数1
select schemaname,relname,analyze_count from pg_stat_all_tables where relname='t_subpartition_0070';
+------------+---------------------+---------------+
| schemaname | relname             | analyze_count |
+------------+---------------------+---------------+
| public     | t_subpartition_0070 | 1             |
+------------+---------------------+---------------+
--test3:  analyze--收集多列统计信息(不包含分区列)
--step11: 收集2个普通列统计信息; expect:成功
analyze t_subpartition_0070 (col_3,col_4);
SQL SUCCESS
select pg_sleep(2);
+----------+
| pg_sleep |
+----------+
|          |
+----------+
--step12: 查询pg_statistic数据; expect:成功,4条数据
select starelkind,stainherit from pg_statistic where starelid=(select oid from pg_class where relname='t_subpartition_0070');
+------------+------------+
| starelkind | stainherit |
+------------+------------+
| c          | false      |
| c          | false      |
| c          | false      |
| c          | false      |
+------------+------------+
--step13: 查询pg_stats数据; expect:成功,4条数据
select tablename,attname from pg_stats  where tablename='t_subpartition_0070';
+---------------------+---------+
| tablename           | attname |
+---------------------+---------+
| t_subpartition_0070 | col_1   |
| t_subpartition_0070 | col_2   |
| t_subpartition_0070 | col_3   |
| t_subpartition_0070 | col_4   |
+---------------------+---------+
--step14: 查询pg_stat_all_tables数据; expect:成功,显示analyze的次数2
select schemaname,relname,analyze_count from pg_stat_all_tables where relname='t_subpartition_0070';
+------------+---------------------+---------------+
| schemaname | relname             | analyze_count |
+------------+---------------------+---------------+
| public     | t_subpartition_0070 | 2             |
+------------+---------------------+---------------+
--test4:  analyze--检测表数据文件
--step15: 检测表数据文件; expect:成功
analyze  verify fast;
SQL SUCCESS
analyze  verify complete;
SQL SUCCESS
--test5:  analyze--检测表和索引的数据文件
--step7: 创建索引; expect:成功
drop index if exists i_subpartition_0070;
SQL SUCCESS
create index i_subpartition_0070 on t_subpartition_0070(col_2);
SQL SUCCESS
--step16: 检测表和索引的数据文件; expect:成功
analyze verify fast t_subpartition_0070 ;
SQL SUCCESS
analyse verify complete i_subpartition_0070 cascade;
SQL SUCCESS
--test6:  analyze--检测表分区的数据文件
--step17: 检测表分区的数据文件; expect:成功
analyze  verify fast t_subpartition_0070 partition (p_list_1);
SQL SUCCESS
analyze  verify complete t_subpartition_0070 partition (p_list_1) cascade;
SQL SUCCESS
--test7:  vacuum--仅回收空间,不更新统计信息
--step18: 创建二级分区表; expect:成功
drop table if exists t_subpartition_0070 cascade;
SQL SUCCESS
create table t_subpartition_0070
(
    col_1 int ,
    col_2 int ,
    col_3 varchar2 ( 30 ) ,
    col_4 int
)
tablespace ts_subpartition_0070
partition by list (col_1) subpartition by list (col_2)
(
  partition p_list_1 values(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
  (
    subpartition p_list_1_1 values ( 0,-1,-2,-3,-4,-5,-6,-7,-8,-9 ),
    subpartition p_list_1_2 values ( default )
  ),
  partition p_list_2 values(0,1,2,3,4,5,6,7,8,9)
  (
    subpartition p_list_2_1 values ( 0,1,2,3,4,5,6,7,8,9 ),
    subpartition p_list_2_2 values ( default ),
    subpartition p_list_2_3 values ( 10,11,12,13,14,15,16,17,18,19),
    subpartition p_list_2_4 values ( 20,21,22,23,24,25,26,27,28,29 ),
    subpartition p_list_2_5 values ( 30,31,32,33,34,35,36,37,38,39 )
  ),
  partition p_list_3 values(10,11,12,13,14,15,16,17,18,19)
  (
    subpartition p_list_3_2 values ( default )
  ),
  partition p_list_4 values(default ),
  partition p_list_5 values(20,21,22,23,24,25,26,27,28,29)
  (
    subpartition p_list_5_1 values ( 0,1,2,3,4,5,6,7,8,9 ),
    subpartition p_list_5_2 values ( default ),
    subpartition p_list_5_3 values ( 10,11,12,13,14,15,16,17,18,19),
    subpartition p_list_5_4 values ( 20,21,22,23,24,25,26,27,28,29 ),
    subpartition p_list_5_5 values ( 30,31,32,33,34,35,36,37,38,39 )
  ),
  partition p_list_6 values(30,31,32,33,34,35,36,37,38,39),
  partition p_list_7 values(40,41,42,43,44,45,46,47,48,49)
  (
    subpartition p_list_7_1 values ( default )
  )
) enable row movement;
SQL SUCCESS
--step19: 插入数据; expect:成功
insert into  t_subpartition_0070 values (generate_series(0, 79),generate_series(0, 79),generate_series(0, 79));
SQL SUCCESS
--step20: vacuum回收空间; expect:成功
vacuum  full freeze  verbose  t_subpartition_0070 partition(p_list_2);
SQL SUCCESS
select pg_sleep(2);
+----------+
| pg_sleep |
+----------+
|          |
+----------+
--step21: 查询pg_stat_all_tables数据; expect:成功,vacuum_count次数未更新
select schemaname,relname,vacuum_count from pg_stat_all_tables where relname='t_subpartition_0070';
+------------+---------------------+--------------+
| schemaname | relname             | vacuum_count |
+------------+---------------------+--------------+
| public     | t_subpartition_0070 | 0            |
+------------+---------------------+--------------+
--step22: vacuum不同组合; expect:成功
vacuum full  freeze t_subpartition_0070;
SQL SUCCESS
vacuum full  verbose t_subpartition_0070;
SQL SUCCESS
vacuum full  compact t_subpartition_0070;
SQL SUCCESS
vacuum freeze t_subpartition_0070;
SQL SUCCESS
vacuum freeze t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
vacuum verbose t_subpartition_0070;
SQL SUCCESS
vacuum verbose t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
vacuum full  freeze t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
vacuum full  verbose t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
--step23: vacuum组合compact,partition; expect:合理报错
vacuum full  compact t_subpartition_0070 partition(p_list_5);
?.*ERROR: COMPACT can not be used with PARTITIO.*
--test8:  vacuum--回收空间并更新统计信息,对关键字顺序无要求
--step24: vacuum回收空间; expect:成功
vacuum  full freeze  verbose analyze t_subpartition_0070 partition(p_list_2);
SQL SUCCESS
vacuum full  analyze  t_subpartition_0070;
SQL SUCCESS
vacuum freeze analyze  t_subpartition_0070(col_1);
SQL SUCCESS
vacuum verbose analyze t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
vacuum verbose analyze t_subpartition_0070(col_5) partition(p_list_5);
SQL SUCCESS
--test9:  vacuum--回收空间并更新统计信息,且对关键字顺序有要求。
--step25: vacuum顺序改变; expect:合理报错
vacuum  freeze full verbose analyze verbose t_subpartition_0070;
?.*ERROR: syntax error at or near "full.*
?.*
--step23: vacuum分析具体的字段名称,不搭配analyze选项使用; expect:合理报错
vacuum full freeze verbose t_subpartition_0070(col_2);
?.*ERROR: syntax error at or near "\(.*
?.*
vacuum full freeze verbose t_subpartition_0070(col_2) partition(p_list_5);
?.*ERROR: syntax error at or near "\(.*
?.*
--step26: vacuum搭配不同的关键字回收空间; expect:成功
vacuum full freeze verbose analyze verbose t_subpartition_0070;
SQL SUCCESS
vacuum full freeze verbose analyze verbose t_subpartition_0070(col_2);
SQL SUCCESS
vacuum full freeze verbose analyze verbose t_subpartition_0070(col_2) partition(p_list_5);
SQL SUCCESS
vacuum full freeze verbose analyze verbose t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
vacuum freeze verbose analyze verbose t_subpartition_0070;
SQL SUCCESS
vacuum freeze verbose analyze verbose t_subpartition_0070(col_2);
SQL SUCCESS
vacuum freeze verbose analyze verbose t_subpartition_0070(col_2) partition(p_list_5);
SQL SUCCESS
vacuum freeze verbose analyze verbose t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
vacuum full freeze  analyze verbose t_subpartition_0070;
SQL SUCCESS
vacuum full freeze  analyze verbose t_subpartition_0070(col_2);
SQL SUCCESS
vacuum full freeze  analyze verbose t_subpartition_0070(col_2) partition(p_list_5);
SQL SUCCESS
vacuum full freeze  analyze verbose t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
vacuum full freeze verbose t_subpartition_0070;
SQL SUCCESS
vacuum full freeze verbose t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
vacuum analyze verbose t_subpartition_0070;
SQL SUCCESS
vacuum analyze verbose t_subpartition_0070(col_2);
SQL SUCCESS
vacuum analyze verbose t_subpartition_0070(col_2) partition(p_list_5);
SQL SUCCESS
vacuum analyze verbose t_subpartition_0070 partition(p_list_5);
SQL SUCCESS
--step27: 查询表数据大小：包括表数据+索引; expect:成功
create index on t_subpartition_0070(col_1,col_3);
SQL SUCCESS
create index on t_subpartition_0070(col_2);
SQL SUCCESS
select ctid,* from t_subpartition_0070 order by col_1;
+--------+-------+-------+-------+-------+
| ctid   | col_1 | col_2 | col_3 | col_4 |
+--------+-------+-------+-------+-------+
| (0,1)  | 0     | 0     | 0     |       |
| (0,2)  | 1     | 1     | 1     |       |
| (0,3)  | 2     | 2     | 2     |       |
| (0,4)  | 3     | 3     | 3     |       |
| (0,5)  | 4     | 4     | 4     |       |
| (0,6)  | 5     | 5     | 5     |       |
| (0,7)  | 6     | 6     | 6     |       |
| (0,8)  | 7     | 7     | 7     |       |
| (0,9)  | 8     | 8     | 8     |       |
| (0,10) | 9     | 9     | 9     |       |
| (0,1)  | 10    | 10    | 10    |       |
| (0,2)  | 11    | 11    | 11    |       |
| (0,3)  | 12    | 12    | 12    |       |
| (0,4)  | 13    | 13    | 13    |       |
| (0,5)  | 14    | 14    | 14    |       |
| (0,6)  | 15    | 15    | 15    |       |
| (0,7)  | 16    | 16    | 16    |       |
| (0,8)  | 17    | 17    | 17    |       |
| (0,9)  | 18    | 18    | 18    |       |
| (0,10) | 19    | 19    | 19    |       |
| (0,1)  | 20    | 20    | 20    |       |
| (0,2)  | 21    | 21    | 21    |       |
| (0,3)  | 22    | 22    | 22    |       |
| (0,4)  | 23    | 23    | 23    |       |
| (0,5)  | 24    | 24    | 24    |       |
| (0,6)  | 25    | 25    | 25    |       |
| (0,7)  | 26    | 26    | 26    |       |
| (0,8)  | 27    | 27    | 27    |       |
| (0,9)  | 28    | 28    | 28    |       |
| (0,10) | 29    | 29    | 29    |       |
| (0,1)  | 30    | 30    | 30    |       |
| (0,2)  | 31    | 31    | 31    |       |
| (0,3)  | 32    | 32    | 32    |       |
| (0,4)  | 33    | 33    | 33    |       |
| (0,5)  | 34    | 34    | 34    |       |
| (0,6)  | 35    | 35    | 35    |       |
| (0,7)  | 36    | 36    | 36    |       |
| (0,8)  | 37    | 37    | 37    |       |
| (0,9)  | 38    | 38    | 38    |       |
| (0,10) | 39    | 39    | 39    |       |
| (0,1)  | 40    | 40    | 40    |       |
| (0,2)  | 41    | 41    | 41    |       |
| (0,3)  | 42    | 42    | 42    |       |
| (0,4)  | 43    | 43    | 43    |       |
| (0,5)  | 44    | 44    | 44    |       |
| (0,6)  | 45    | 45    | 45    |       |
| (0,7)  | 46    | 46    | 46    |       |
| (0,8)  | 47    | 47    | 47    |       |
| (0,9)  | 48    | 48    | 48    |       |
| (0,10) | 49    | 49    | 49    |       |
| (0,1)  | 50    | 50    | 50    |       |
| (0,2)  | 51    | 51    | 51    |       |
| (0,3)  | 52    | 52    | 52    |       |
| (0,4)  | 53    | 53    | 53    |       |
| (0,5)  | 54    | 54    | 54    |       |
| (0,6)  | 55    | 55    | 55    |       |
| (0,7)  | 56    | 56    | 56    |       |
| (0,8)  | 57    | 57    | 57    |       |
| (0,9)  | 58    | 58    | 58    |       |
| (0,10) | 59    | 59    | 59    |       |
| (0,11) | 60    | 60    | 60    |       |
| (0,12) | 61    | 61    | 61    |       |
| (0,13) | 62    | 62    | 62    |       |
| (0,14) | 63    | 63    | 63    |       |
| (0,15) | 64    | 64    | 64    |       |
| (0,16) | 65    | 65    | 65    |       |
| (0,17) | 66    | 66    | 66    |       |
| (0,18) | 67    | 67    | 67    |       |
| (0,19) | 68    | 68    | 68    |       |
| (0,20) | 69    | 69    | 69    |       |
| (0,21) | 70    | 70    | 70    |       |
| (0,22) | 71    | 71    | 71    |       |
| (0,23) | 72    | 72    | 72    |       |
| (0,24) | 73    | 73    | 73    |       |
| (0,25) | 74    | 74    | 74    |       |
| (0,26) | 75    | 75    | 75    |       |
| (0,27) | 76    | 76    | 76    |       |
| (0,28) | 77    | 77    | 77    |       |
| (0,29) | 78    | 78    | 78    |       |
| (0,30) | 79    | 79    | 79    |       |
+--------+-------+-------+-------+-------+
select pg_size_pretty(pg_total_relation_size('t_subpartition_0070'));
+----------------+
| pg_size_pretty |
+----------------+
| 272 kB         |
+----------------+
select pg_size_pretty(pg_indexes_size('t_subpartition_0070'));
+----------------+
| pg_size_pretty |
+----------------+
| 32 kB          |
+----------------+
select pg_size_pretty(pg_relation_size('t_subpartition_0070'));
+----------------+
| pg_size_pretty |
+----------------+
| 48 kB          |
+----------------+
select pg_size_pretty(pg_relation_size('t_subpartition_0070_col_1_col_3_tableoid_idx'));
+----------------+
| pg_size_pretty |
+----------------+
| 16 kB          |
+----------------+
select pg_size_pretty(pg_relation_size('t_subpartition_0070_col_2_tableoid_idx'));
+----------------+
| pg_size_pretty |
+----------------+
| 16 kB          |
+----------------+
--step28: 删除表和表空间; expect:成功
drop table if exists t_subpartition_0070;
SQL SUCCESS
drop tablespace if exists ts_subpartition_0070;
SQL SUCCESS
