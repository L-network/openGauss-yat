-- @testpoint: range_hash二级分区表：create like from 列存表/create if not exists 同名,部分测试点合理报错
--test1: create like from 列存表
--step1: 创建列存表; expect:成功
drop table if exists  t_subpartition_0309_01;
SQL SUCCESS
create table t_subpartition_0309_01 (col_1 int, col_2 int,col_3 int )
with(orientation = column,compression=middle,max_batchrow=50000,
partial_cluster_rows=100000,deltarow_threshold=1000);
SQL SUCCESS
--step2: 创建表指定like including reloptions; expect:合理报错
create table t_subpartition_0309_08 (like t_subpartition_0309_01 including reloptions)
partition by range (col_1) subpartition by hash (col_2)
(
  partition p_range_1 values less than( -10 )
  (
    subpartition p_hash_1_1 ,
    subpartition p_hash_1_2 ,
     subpartition p_hash_1_3
  ),
  partition p_range_2 values less than( 20 ),
  partition p_range_3 values less than( 30)
  (
    subpartition p_hash_3_1 ,
    subpartition p_hash_3_2 ,
    subpartition p_hash_3_3
  ),
    partition p_range_4 values less than( 50)
  (
    subpartition p_hash_4_1 ,
    subpartition p_hash_4_2 ,
    subpartition p_hash_4_3
  ),
  partition p_range_5 values less than( maxvalue )
) enable row movement;
?.*ERROR: Unsupport featur.*
  Detail: cstore/timeseries don't support subpartition table.
--step3: 插入数据; expect:合理报错
insert into t_subpartition_0309_08 values(1,16,2);
?.*ERROR: relation "t_subpartition_0309_08" does not exist on.*
?.*
--test2: create if not exists （同名-字段数目不同）
--step4: 创建二级分区表; expect:成功
drop table if exists  t_subpartition_0309;
SQL SUCCESS
create table if not exists t_subpartition_0309
(
    col_1 int ,
    col_2 int  not null ,
  col_3 varchar2 ( 30 ) not null ,
    col_4 int  generated always as(2*col_2) stored ,
    check (col_4 >= col_2)
)
with(fillfactor=80)
partition by range (col_1) subpartition by hash (col_2)
(
  partition p_range_1 values less than( -10 )
  (
    subpartition p_hash_1_1 ,
    subpartition p_hash_1_2 ,
     subpartition p_hash_1_3
  ),
  partition p_range_2 values less than( 20 ),
  partition p_range_3 values less than( 30)
  (
    subpartition p_hash_3_1 ,
    subpartition p_hash_3_2 ,
    subpartition p_hash_3_3
  ),
    partition p_range_4 values less than( 50)
  (
    subpartition p_hash_4_1 ,
    subpartition p_hash_4_2 ,
    subpartition p_hash_4_3
  ),
  partition p_range_5 values less than( maxvalue )
) enable row movement;
SQL SUCCESS
--step5: 创建同名不同字段数目的二级分区表; expect:成功
create table if not exists t_subpartition_0309
(
    col_1 int ,
    col_2 int  not null ,
    col_3 varchar2 ( 30 ) not null ,
    col_4 int  generated always as(2*col_2) stored ,
    col_5 int ,
    check (col_4 >= col_2)
)
with(fillfactor=80)
partition by range (col_1) subpartition by hash (col_2)
(
  partition p_range_1 values less than( -10 )
  (
    subpartition p_hash_1_1 ,
    subpartition p_hash_1_2 ,
     subpartition p_hash_1_3
  ),
  partition p_range_2 values less than( 20 ),
  partition p_range_3 values less than( 30)
  (
    subpartition p_hash_3_1 ,
    subpartition p_hash_3_2 ,
    subpartition p_hash_3_3
  ),
    partition p_range_4 values less than( 50)
  (
    subpartition p_hash_4_1 ,
    subpartition p_hash_4_2 ,
    subpartition p_hash_4_3
  ),
  partition p_range_5 values less than( maxvalue )
) enable row movement;
SQL SUCCESS
--step6: 查看数据; expect:成功,4列数据,上一个建表时,表已存在,未覆盖
select * from t_subpartition_0309;
+-------+-------+-------+-------+
| col_1 | col_2 | col_3 | col_4 |
+-------+-------+-------+-------+
+-------+-------+-------+-------+
--step7: 创建同名不同字段数据类型的二级分区表; expect:成功
create table if not exists t_subpartition_0309
(
    col_1 int ,
    col_2 int  not null ,
    col_3 int not null ,
    col_4 int  generated always as(2*col_2) stored ,
    check (col_4 >= col_2)
)
with(fillfactor=80)
partition by range (col_1) subpartition by hash (col_2)
(
  partition p_range_1 values less than( -10 )
  (
    subpartition p_hash_1_1 ,
    subpartition p_hash_1_2 ,
     subpartition p_hash_1_3
  ),
  partition p_range_2 values less than( 20 ),
  partition p_range_3 values less than( 30)
  (
    subpartition p_hash_3_1 ,
    subpartition p_hash_3_2 ,
    subpartition p_hash_3_3
  ),
    partition p_range_4 values less than( 50)
  (
    subpartition p_hash_4_1 ,
    subpartition p_hash_4_2 ,
    subpartition p_hash_4_3
  ),
  partition p_range_5 values less than( maxvalue )
) enable row movement;
SQL SUCCESS
--step8: col_3列插入字符串类型的数据; expect:成功,上一个建表时,表已存在,未覆盖
insert into t_subpartition_0309 values(1,1,'aa');
SQL SUCCESS
--test3: create if not exists （普通表）
--step9: 创建普通表; expect:成功
drop table if exists  t_subpartition_0309;
SQL SUCCESS
create table if not exists t_subpartition_0309
(
    col_1 int ,
    col_2 int  not null ,
    col_3 varchar2 ( 30 ) not null ,
    col_4 int  generated always as(2*col_2) stored ,
    check (col_4 >= col_2)
);
SQL SUCCESS
--step10: 创建二级分区表和普通表同名; expect:成功
create table if not exists t_subpartition_0309
(
    col_1 int ,
    col_2 int  not null ,
    col_3 int not null ,
    col_4 int  generated always as(2*col_2) stored ,
    check (col_4 >= col_2)
)
with(fillfactor=80)
partition by range (col_1) subpartition by hash (col_2)
(
  partition p_range_1 values less than( -10 )
  (
    subpartition p_hash_1_1 ,
    subpartition p_hash_1_2 ,
     subpartition p_hash_1_3
  ),
  partition p_range_2 values less than( 20 ),
  partition p_range_3 values less than( 30)
  (
    subpartition p_hash_3_1 ,
    subpartition p_hash_3_2 ,
    subpartition p_hash_3_3
  ),
    partition p_range_4 values less than( 50)
  (
    subpartition p_hash_4_1 ,
    subpartition p_hash_4_2 ,
    subpartition p_hash_4_3
  ),
  partition p_range_5 values less than( maxvalue )
) enable row movement;
SQL SUCCESS
--step11: 查看指定二级分区数据; expect:合理报错,上一个建表时,表已存在,未覆盖
select * from t_subpartition_0309 subpartition(p_range_1_5);
?.*ERROR: relation "t_subpartition_0309" is not subpartitioned table.*
?.*Detail.*
--step12: 清理环境; expect:成功
drop table if exists t_subpartition_0309;
SQL SUCCESS
