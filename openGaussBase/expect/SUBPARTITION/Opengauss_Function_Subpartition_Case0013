-- @testpoint: hash_range二级分区键列联合约束/表联合约束
--test1: 二级分区列联合约束
--step1: 创建二级分区表，二级分区键为主键约束，一级分区键为check约束; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int primary key,check(jn>=6),name varchar2)partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step2: 创建二级分区表，二级分区键为唯一约束和check约束; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int unique,check(jn>=6),name varchar2)partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step3: 创建二级分区表，二级分区键为default约束和check约束; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int default 6,check(jn>=6),name varchar2)partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step4: 创建二级分区表，二级分区键为非空约束和check约束; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int not null,check(jn>=6),name varchar2)partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step5: 创建二级分区表，二级分区键为外键约束和check约束; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
drop table if exists t_subpartition_0013_01;
SQL SUCCESS
create table if not exists t_subpartition_0013_01(jid int,jn int unique,name varchar2);
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int references t_subpartition_0013_01(jn),check(jn>=6),name varchar2)partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--test2: 二级分区表联合约束
--step6: 创建二级分区表，二级分区键作为主键约束和check约束来确认约束名; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int,name varchar2,constraint ucp primary key(jn),constraint ucc check(jn>=6))partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step7: 创建二级分区表，二级分区键作为主键约束和check约束为默认约束名; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int,name varchar2,primary key(jn),check(jn>=6))partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step8: 创建二级分区表，二级分区键作为唯一约束和check约束为默认约束名; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int,name varchar2,unique(jn),check(jn>=6))partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step9: 创建二级分区表，二级分区键作为唯一约束和check约束为默认约束名; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
drop table if exists t_subpartition_0013_01 cascade;
SQL SUCCESS
create table if not exists t_subpartition_0013_01(jid int,jn int unique,name varchar2);
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int,name varchar2,foreign key(jn)references t_subpartition_0013_01(jn),check(jn>=6))partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step10: 创建二级分区表，二级分区键作为主键约束和外键约束为默认约束名; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
drop table if exists t_subpartition_0013_01 cascade;
SQL SUCCESS
create table if not exists t_subpartition_0013_01(jid int,jn int unique,name varchar2);
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int,name varchar2,foreign key(jn)references t_subpartition_0013_01(jn),primary key(jn))partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step11: 创建二级分区表，二级分区键作为外键约束和唯一约束为默认约束名; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
drop table if exists t_subpartition_0013_01 cascade;
SQL SUCCESS
create table if not exists t_subpartition_0013_01(jid int,jn int unique,name varchar2);
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int,name varchar2,foreign key(jn)references t_subpartition_0013_01(jn),unique(jn))partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step12: 创建二级分区表，作复合约束，主键约束一列，唯一约束两列; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int,name varchar2,primary key(jn),unique(jn,jid))partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step13: 创建二级分区表，作复合约束，唯一约束一列，主键约束两列; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
create table t_subpartition_0013(jid int,jn int,name varchar2,unique(jn),primary key(jn,jid))partition by hash (jid) subpartition by range(jn)
(partition hr1(subpartition hr11 values less than(6),subpartition hr12 values less than(maxvalue)),partition hr2(subpartition hr21 values less than(6),subpartition hr22 values less than(maxvalue)));
SQL SUCCESS
--step14: 删除表; expect:成功
drop table if exists t_subpartition_0013 cascade;
SQL SUCCESS
drop table if exists t_subpartition_0013_01 cascade;
SQL SUCCESS
