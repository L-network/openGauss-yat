-- @testpoint: list_hash二级分区表：create if not exists 同名,部分测试点合理报错
--test1: create if not exists (二级分区表)
--step1: 创建二级分区表; expect:成功
drop table if exists  t_subpartition_0134;
SQL SUCCESS
create  table if not exists t_subpartition_0134
(
  col_1 int ,
  col_2 int not null ,
  col_3 varchar2 ( 30 ) not null ,
  col_4 int generated always as(2*col_2) stored ,
    check (col_4 >= col_2)
)
with(fillfactor=80)
partition by list (col_1) subpartition by hash (col_2)
(
 partition p_list_1 values (-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
 (
  subpartition p_hash_1_1 ,
  subpartition p_hash_1_2 ,
  subpartition p_hash_1_3
 ),
 partition p_list_2 values (1,2,3,4,5,6,7,8,9,10 )
 (
  subpartition p_hash_2_1 ,
  subpartition p_hash_2_2 ,
  subpartition p_hash_2_3 ,
  subpartition p_hash_2_4 ,
  subpartition p_hash_2_5
 ),
 partition p_list_3 values (11,12,13,14,15,16,17,18,19,20),
 partition p_list_4 values (21,22,23,24,25,26,27,28,29,30 )
 (
  subpartition p_hash_4_1
 ),
 partition p_list_5 values (default)
 (
  subpartition p_hash_5_1
 ),
 partition p_list_6 values (31,32,33,34,35,36,37,38,39,40)
 (
  subpartition p_hash_6_1 ,
  subpartition p_hash_6_2 ,
  subpartition p_hash_6_3
 )
) enable row movement ;
SQL SUCCESS
--step2: 创建同名不同字段数目的二级分区表; expect:成功
create  table if not exists t_subpartition_0134
(
  col_1 int ,
  col_2 int not null ,
    col_3 varchar2 ( 30 ) not null ,
  col_4 int generated always as(2*col_2) stored ,
    col_5 int ,
    check (col_4 >= col_2)
)
with(fillfactor=80)
partition by list (col_1) subpartition by hash (col_2)
(
 partition p_list_1 values (-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
 (
  subpartition p_hash_1_1 ,
  subpartition p_hash_1_2 ,
  subpartition p_hash_1_3
 ),
 partition p_list_2 values (1,2,3,4,5,6,7,8,9,10 )
 (
  subpartition p_hash_2_1 ,
  subpartition p_hash_2_2 ,
  subpartition p_hash_2_3 ,
  subpartition p_hash_2_4 ,
  subpartition p_hash_2_5
 ),
 partition p_list_3 values (11,12,13,14,15,16,17,18,19,20),
 partition p_list_4 values (21,22,23,24,25,26,27,28,29,30 )
 (
  subpartition p_hash_4_1
 ),
 partition p_list_5 values (default)
 (
  subpartition p_hash_5_1
 ),
 partition p_list_6 values (31,32,33,34,35,36,37,38,39,40)
 (
  subpartition p_hash_6_1 ,
  subpartition p_hash_6_2 ,
  subpartition p_hash_6_3
 )
) enable row movement ;
SQL SUCCESS
--step3: 查看数据; expect:成功,4列数据,上一个建表时,表已存在,未覆盖
select * from t_subpartition_0134;
+-------+-------+-------+-------+
| col_1 | col_2 | col_3 | col_4 |
+-------+-------+-------+-------+
+-------+-------+-------+-------+
--step4: 创建同名不同字段数据类型的二级分区表; expect:成功
create  table if not exists t_subpartition_0134
(
  col_1 int ,
  col_2 int not null ,
    col_3 int not null ,
  col_4 int generated always as(2*col_2) stored ,
    check (col_4 >= col_2)
)
with(fillfactor=80)
partition by list (col_1) subpartition by hash (col_2)
(
 partition p_list_1 values (-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
 (
  subpartition p_hash_1_1 ,
  subpartition p_hash_1_2 ,
  subpartition p_hash_1_3
 ),
 partition p_list_2 values (1,2,3,4,5,6,7,8,9,10 )
 (
  subpartition p_hash_2_1 ,
  subpartition p_hash_2_2 ,
  subpartition p_hash_2_3 ,
  subpartition p_hash_2_4 ,
  subpartition p_hash_2_5
 ),
 partition p_list_3 values (11,12,13,14,15,16,17,18,19,20),
 partition p_list_4 values (21,22,23,24,25,26,27,28,29,30 )
 (
  subpartition p_hash_4_1
 ),
 partition p_list_5 values (default)
 (
  subpartition p_hash_5_1
 ),
 partition p_list_6 values (31,32,33,34,35,36,37,38,39,40)
 (
  subpartition p_hash_6_1 ,
  subpartition p_hash_6_2 ,
  subpartition p_hash_6_3
 )
) enable row movement ;
SQL SUCCESS
--step5: col_3列插入字符串类型的数据; expect:成功,上一个建表时,表已存在,未覆盖
insert into t_subpartition_0134 values(1,1,'aa');
SQL SUCCESS
--test2: create if not exists (普通表)
--step6: 创建普通表; expect:成功
drop table if exists  t_subpartition_0134;
SQL SUCCESS
create  table if not exists t_subpartition_0134
(
  col_1 int ,
  col_2 int not null ,
    col_3 varchar2 ( 30 ) not null ,
  col_4 int generated always as(2*col_2) stored ,
    check (col_4 >= col_2)
);
SQL SUCCESS
--step6: 创建二级分区表和普通表同名; expect:成功
create  table if not exists t_subpartition_0134
(
  col_1 int ,
  col_2 int not null ,
    col_3 int not null ,
  col_4 int generated always as(2*col_2) stored ,
    check (col_4 >= col_2)
)
with(fillfactor=80)
partition by list (col_1) subpartition by hash (col_2)
(
 partition p_list_1 values (-1,-2,-3,-4,-5,-6,-7,-8,-9,-10 )
 (
  subpartition p_hash_1_1 ,
  subpartition p_hash_1_2 ,
  subpartition p_hash_1_3
 ),
 partition p_list_2 values (1,2,3,4,5,6,7,8,9,10 )
 (
  subpartition p_hash_2_1 ,
  subpartition p_hash_2_2 ,
  subpartition p_hash_2_3 ,
  subpartition p_hash_2_4 ,
  subpartition p_hash_2_5
 ),
 partition p_list_3 values (11,12,13,14,15,16,17,18,19,20),
 partition p_list_4 values (21,22,23,24,25,26,27,28,29,30 )
 (
  subpartition p_hash_4_1
 ),
 partition p_list_5 values (default)
 (
  subpartition p_hash_5_1
 ),
 partition p_list_6 values (31,32,33,34,35,36,37,38,39,40)
 (
  subpartition p_hash_6_1 ,
  subpartition p_hash_6_2 ,
  subpartition p_hash_6_3
 )
) enable row movement ;
SQL SUCCESS
--step7: 查看指定二级分区数据; expect:合理报错,上一个建表时,表已存在,未覆盖
select * from t_subpartition_0134 subpartition(p_range_1_5);
?.*ERROR: relation "t_subpartition_0134" is not subpartitioned table.*
?.*
--step8: 清理环境; expect:成功
drop table if exists t_subpartition_0134;
SQL SUCCESS
